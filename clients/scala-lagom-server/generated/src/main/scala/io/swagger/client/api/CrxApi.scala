/**
 * Adobe Experience Manager (AEM) API
 * Swagger AEM is an OpenAPI specification for Adobe Experience Manager (AEM) API
 *
 * The version of the OpenAPI document: 3.5.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package io.swagger.client.api

import akka.{Done, NotUsed}
import com.lightbend.lagom.scaladsl.api.transport.Method
import com.lightbend.lagom.scaladsl.api.{Service, ServiceCall}
import play.api.libs.json._
import com.lightbend.lagom.scaladsl.api.deser.PathParamSerializer

import java.io.File
import io.swagger.client.model.InstallStatus

trait CrxApi extends Service {


  final override def descriptor = {
    import Service._
    named("CrxApi").withCalls(
      restCall(Method.GET, "/crx/server/crx.default/jcr:root/.1.json", getCrxdeStatus _), 
      restCall(Method.GET, "/crx/packmgr/installstatus.jsp", getInstallStatus _), 
      restCall(Method.GET, "/crx/packmgr/service/script.html", getPackageManagerServlet _), 
      restCall(Method.POST, "/crx/packmgr/service.jsp?cmd", postPackageService _), 
      restCall(Method.POST, "/crx/packmgr/service/.json/:path?cmd&groupName&packageName&packageVersion&charset&force&recursive", postPackageServiceJson _), 
      restCall(Method.POST, "/crx/packmgr/update.jsp?groupName&packageName&version&`path`&filter&charset", postPackageUpdate _), 
      restCall(Method.POST, "/crx/explorer/ui/setpassword.jsp?old&plain&verify", postSetPassword _)
    ).withAutoAcl(true)
  }


  /**
    * 
    * 
    * 
    * @return String
    */
  def getCrxdeStatus(): ServiceCall[NotUsed ,String]
  
  /**
    * 
    * 
    * 
    * @return InstallStatus
    */
  def getInstallStatus(): ServiceCall[NotUsed ,InstallStatus]
  
  /**
    * 
    * 
    * 
    * @return void
    */
  def getPackageManagerServlet(): ServiceCall[NotUsed ,Done]
        
  /**
    * 
    * 
    *  
    * @param cmd  
    * @return String
    */
  def postPackageService(cmd:String          ): ServiceCall[NotUsed ,String]
        








  // `package`:File  -- not yet supported x-www-form-urlencoded
  /**
    * 
    * 
    *  
    * @param `path`   
    * @param cmd   
    * @param groupName  (optional) 
    * @param packageName  (optional) 
    * @param packageVersion  (optional) 
    * @param charset  (optional) 
    * @param force  (optional) 
    * @param recursive  (optional) 
    * @param `package`  (optional)
    * @return String
    */
  def postPackageServiceJson(cmd:String          ,groupName:           Option[String] = None,packageName:           Option[String] = None,packageVersion:           Option[String] = None,charset:           Option[String] = None,force:           Option[Boolean] = None,recursive:           Option[Boolean] = None`path`: String): ServiceCall[NotUsed ,String]
        
  /**
    * 
    * 
    *  
    * @param groupName   
    * @param packageName   
    * @param version   
    * @param `path`   
    * @param filter  (optional) 
    * @param charset  (optional)
    * @return String
    */
  def postPackageUpdate(groupName:String          ,packageName:String          ,version:String          ,`path`:String          ,filter:           Option[String] = None,charset:           Option[String] = None): ServiceCall[NotUsed ,String]
        
  /**
    * 
    * 
    *  
    * @param old   
    * @param plain   
    * @param verify  
    * @return String
    */
  def postSetPassword(old:String          ,plain:String          ,verify:String          ): ServiceCall[NotUsed ,String]
  

  }

