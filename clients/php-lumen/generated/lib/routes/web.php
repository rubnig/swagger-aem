<?php

/**
 * Adobe Experience Manager (AEM) API
 * Swagger AEM is an OpenAPI specification for Adobe Experience Manager (AEM) API
 * PHP version 7.2.5
 *
 * The version of the OpenAPI document: 3.5.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 * The Lumen framework is open-sourced software licensed under the [MIT license](https://opensource.org/licenses/MIT).
 */

/**
 * Adobe Experience Manager (AEM) API
 * @version 3.5.0-pre.0
 */

/*
|--------------------------------------------------------------------------
| Application Routes
|--------------------------------------------------------------------------
|
| Here is where you can register all of the routes for an application.
| It is a breeze. Simply tell Lumen the URIs it should respond to
| and give it the Closure to call when that URI is requested.
|
*/

$router->get('/', function () use ($router) {
    return $router->app->version();
});

/**
 * post postBundle
 * Summary: 
 * Notes: 
 */
$router->post('/system/console/bundles/{name}', 'ConsoleApi@postBundle');

/**
 * get getBundleInfo
 * Summary: 
 * Notes: 
 */
$router->get('/system/console/bundles/{name}.json', 'ConsoleApi@getBundleInfo');

/**
 * get getConfigMgr
 * Summary: 
 * Notes: 
 */
$router->get('/system/console/configMgr', 'ConsoleApi@getConfigMgr');

/**
 * post postSamlConfiguration
 * Summary: 
 * Notes: 
 */
$router->post('/system/console/configMgr/com.adobe.granite.auth.saml.SamlAuthenticationHandler', 'ConsoleApi@postSamlConfiguration');

/**
 * post postJmxRepository
 * Summary: 
 * Notes: 
 */
$router->post('/system/console/jmx/com.adobe.granite:type=Repository/op/{action}', 'ConsoleApi@postJmxRepository');

/**
 * get getAemProductInfo
 * Summary: 
 * Notes: 
 */
$router->get('/system/console/status-productinfo.json', 'ConsoleApi@getAemProductInfo');

/**
 * post postCqActions
 * Summary: 
 * Notes: 
 */
$router->post('/.cqactions.html', 'CqApi@postCqActions');

/**
 * get getLoginPage
 * Summary: 
 * Notes: 
 */
$router->get('/libs/granite/core/content/login.html', 'CqApi@getLoginPage');

/**
 * post postSetPassword
 * Summary: 
 * Notes: 
 */
$router->post('/crx/explorer/ui/setpassword.jsp', 'CrxApi@postSetPassword');

/**
 * get getInstallStatus
 * Summary: 
 * Notes: 
 */
$router->get('/crx/packmgr/installstatus.jsp', 'CrxApi@getInstallStatus');

/**
 * post postPackageService
 * Summary: 
 * Notes: 
 */
$router->post('/crx/packmgr/service.jsp', 'CrxApi@postPackageService');

/**
 * post postPackageServiceJson
 * Summary: 
 * Notes: 
 */
$router->post('/crx/packmgr/service/.json/{path}', 'CrxApi@postPackageServiceJson');

/**
 * get getPackageManagerServlet
 * Summary: 
 * Notes: 
 */
$router->get('/crx/packmgr/service/script.html', 'CrxApi@getPackageManagerServlet');

/**
 * post postPackageUpdate
 * Summary: 
 * Notes: 
 */
$router->post('/crx/packmgr/update.jsp', 'CrxApi@postPackageUpdate');

/**
 * get getCrxdeStatus
 * Summary: 
 * Notes: 
 */
$router->get('/crx/server/crx.default/jcr:root/.1.json', 'CrxApi@getCrxdeStatus');

/**
 * post postConfigAemPasswordReset
 * Summary: 
 * Notes: 
 */
$router->post('/apps/system/config/com.shinesolutions.aem.passwordreset.Activator', 'CustomApi@postConfigAemPasswordReset');

/**
 * post postConfigAemHealthCheckServlet
 * Summary: 
 * Notes: 
 */
$router->post('/apps/system/config/com.shinesolutions.healthcheck.hc.impl.ActiveBundleHealthCheck', 'CustomApi@postConfigAemHealthCheckServlet');

/**
 * get getAemHealthCheck
 * Summary: 
 * Notes: 
 */
$router->get('/system/health', 'CustomApi@getAemHealthCheck');

/**
 * post sslSetup
 * Summary: 
 * Notes: 
 */
$router->post('/libs/granite/security/post/sslSetup.html', 'GraniteApi@sslSetup');

/**
 * post postConfigAdobeGraniteSamlAuthenticationHandler
 * Summary: 
 * Notes: 
 */
$router->post('/apps/system/config/com.adobe.granite.auth.saml.SamlAuthenticationHandler.config', 'SlingApi@postConfigAdobeGraniteSamlAuthenticationHandler');

/**
 * post postConfigApacheFelixJettyBasedHttpService
 * Summary: 
 * Notes: 
 */
$router->post('/apps/system/config/org.apache.felix.http', 'SlingApi@postConfigApacheFelixJettyBasedHttpService');

/**
 * post postConfigApacheHttpComponentsProxyConfiguration
 * Summary: 
 * Notes: 
 */
$router->post('/apps/system/config/org.apache.http.proxyconfigurator.config', 'SlingApi@postConfigApacheHttpComponentsProxyConfiguration');

/**
 * post postConfigApacheSlingDavExServlet
 * Summary: 
 * Notes: 
 */
$router->post('/apps/system/config/org.apache.sling.jcr.davex.impl.servlets.SlingDavExServlet', 'SlingApi@postConfigApacheSlingDavExServlet');

/**
 * post postConfigApacheSlingReferrerFilter
 * Summary: 
 * Notes: 
 */
$router->post('/apps/system/config/org.apache.sling.security.impl.ReferrerFilter', 'SlingApi@postConfigApacheSlingReferrerFilter');

/**
 * post postConfigApacheSlingGetServlet
 * Summary: 
 * Notes: 
 */
$router->post('/apps/system/config/org.apache.sling.servlets.get.DefaultGetServlet', 'SlingApi@postConfigApacheSlingGetServlet');

/**
 * post postConfigProperty
 * Summary: 
 * Notes: 
 */
$router->post('/apps/system/config/{configNodeName}', 'SlingApi@postConfigProperty');

/**
 * get getQuery
 * Summary: 
 * Notes: 
 */
$router->get('/bin/querybuilder.json', 'SlingApi@getQuery');

/**
 * post postQuery
 * Summary: 
 * Notes: 
 */
$router->post('/bin/querybuilder.json', 'SlingApi@postQuery');

/**
 * get getPackage
 * Summary: 
 * Notes: 
 */
$router->get('/etc/packages/{group}/{name}-{version}.zip', 'SlingApi@getPackage');

/**
 * get getPackageFilter
 * Summary: 
 * Notes: 
 */
$router->get('/etc/packages/{group}/{name}-{version}.zip/jcr:content/vlt:definition/filter.tidy.2.json', 'SlingApi@getPackageFilter');

/**
 * get getAgents
 * Summary: 
 * Notes: 
 */
$router->get('/etc/replication/agents.{runmode}.-1.json', 'SlingApi@getAgents');

/**
 * delete deleteAgent
 * Summary: 
 * Notes: 
 */
$router->delete('/etc/replication/agents.{runmode}/{name}', 'SlingApi@deleteAgent');

/**
 * get getAgent
 * Summary: 
 * Notes: 
 */
$router->get('/etc/replication/agents.{runmode}/{name}', 'SlingApi@getAgent');

/**
 * post postAgent
 * Summary: 
 * Notes: 
 */
$router->post('/etc/replication/agents.{runmode}/{name}', 'SlingApi@postAgent');

/**
 * post postTreeActivation
 * Summary: 
 * Notes: 
 */
$router->post('/etc/replication/treeactivation.html', 'SlingApi@postTreeActivation');

/**
 * post postTruststorePKCS12
 * Summary: 
 * Notes: 
 */
$router->post('/etc/truststore', 'SlingApi@postTruststorePKCS12');

/**
 * get getTruststore
 * Summary: 
 * Notes: 
 */
$router->get('/etc/truststore/truststore.p12', 'SlingApi@getTruststore');

/**
 * post postAuthorizables
 * Summary: 
 * Notes: 
 */
$router->post('/libs/granite/security/post/authorizables', 'SlingApi@postAuthorizables');

/**
 * post postTruststore
 * Summary: 
 * Notes: 
 */
$router->post('/libs/granite/security/post/truststore', 'SlingApi@postTruststore');

/**
 * get getTruststoreInfo
 * Summary: 
 * Notes: 
 */
$router->get('/libs/granite/security/truststore.json', 'SlingApi@getTruststoreInfo');

/**
 * post postAuthorizableKeystore
 * Summary: 
 * Notes: 
 */
$router->post('/{intermediatePath}/{authorizableId}.ks.html', 'SlingApi@postAuthorizableKeystore');

/**
 * get getAuthorizableKeystore
 * Summary: 
 * Notes: 
 */
$router->get('/{intermediatePath}/{authorizableId}.ks.json', 'SlingApi@getAuthorizableKeystore');

/**
 * get getKeystore
 * Summary: 
 * Notes: 
 */
$router->get('/{intermediatePath}/{authorizableId}/keystore/store.p12', 'SlingApi@getKeystore');

/**
 * post postPath
 * Summary: 
 * Notes: 
 */
$router->post('/{path}/', 'SlingApi@postPath');

/**
 * delete deleteNode
 * Summary: 
 * Notes: 
 */
$router->delete('/{path}/{name}', 'SlingApi@deleteNode');

/**
 * get getNode
 * Summary: 
 * Notes: 
 */
$router->get('/{path}/{name}', 'SlingApi@getNode');

/**
 * post postNode
 * Summary: 
 * Notes: 
 */
$router->post('/{path}/{name}', 'SlingApi@postNode');

/**
 * post postNodeRw
 * Summary: 
 * Notes: 
 */
$router->post('/{path}/{name}.rw.html', 'SlingApi@postNodeRw');

