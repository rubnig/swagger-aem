#import <Foundation/Foundation.h>
#import "OAIInstallStatus.h"
#import "OAIApi.h"

/**
* Adobe Experience Manager (AEM) API
* Swagger AEM is an OpenAPI specification for Adobe Experience Manager (AEM) API
*
* The version of the OpenAPI document: 3.5.0-pre.0
* Contact: opensource@shinesolutions.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/



@interface OAICrxApi: NSObject <OAIApi>

extern NSString* kOAICrxApiErrorDomain;
extern NSInteger kOAICrxApiMissingParamErrorCode;

-(instancetype) initWithApiClient:(OAIApiClient *)apiClient NS_DESIGNATED_INITIALIZER;

/// 
/// 
///
/// 
///  code:200 message:"CRXDE is enabled",
///  code:404 message:"CRXDE is disabled"
///
/// @return NSString*
-(NSURLSessionTask*) getCrxdeStatusWithCompletionHandler: 
    (void (^)(NSString* output, NSError* error)) handler;


/// 
/// 
///
/// 
///  code:200 message:"Retrieved CRX package manager install status",
///  code:0 message:"Default response"
///
/// @return OAIInstallStatus*
-(NSURLSessionTask*) getInstallStatusWithCompletionHandler: 
    (void (^)(OAIInstallStatus* output, NSError* error)) handler;


/// 
/// 
///
/// 
///  code:404 message:"Package Manager Servlet is disabled",
///  code:405 message:"Package Manager Servlet is active"
///
/// @return void
-(NSURLSessionTask*) getPackageManagerServletWithCompletionHandler: 
    (void (^)(NSError* error)) handler;


/// 
/// 
///
/// @param cmd 
/// 
///  code:0 message:"Default response"
///
/// @return NSString*
-(NSURLSessionTask*) postPackageServiceWithCmd: (NSString*) cmd
    completionHandler: (void (^)(NSString* output, NSError* error)) handler;


/// 
/// 
///
/// @param path 
/// @param cmd 
/// @param groupName  (optional)
/// @param packageName  (optional)
/// @param packageVersion  (optional)
/// @param charset  (optional)
/// @param force  (optional)
/// @param recursive  (optional)
/// @param package  (optional)
/// 
///  code:0 message:"Default response"
///
/// @return NSString*
-(NSURLSessionTask*) postPackageServiceJsonWithPath: (NSString*) path
    cmd: (NSString*) cmd
    groupName: (NSString*) groupName
    packageName: (NSString*) packageName
    packageVersion: (NSString*) packageVersion
    charset: (NSString*) charset
    force: (NSNumber*) force
    recursive: (NSNumber*) recursive
    package: (NSURL*) package
    completionHandler: (void (^)(NSString* output, NSError* error)) handler;


/// 
/// 
///
/// @param groupName 
/// @param packageName 
/// @param version 
/// @param path 
/// @param filter  (optional)
/// @param charset  (optional)
/// 
///  code:0 message:"Default response"
///
/// @return NSString*
-(NSURLSessionTask*) postPackageUpdateWithGroupName: (NSString*) groupName
    packageName: (NSString*) packageName
    version: (NSString*) version
    path: (NSString*) path
    filter: (NSString*) filter
    charset: (NSString*) charset
    completionHandler: (void (^)(NSString* output, NSError* error)) handler;


/// 
/// 
///
/// @param old 
/// @param plain 
/// @param verify 
/// 
///  code:0 message:"Default response"
///
/// @return NSString*
-(NSURLSessionTask*) postSetPasswordWithOld: (NSString*) old
    plain: (NSString*) plain
    verify: (NSString*) verify
    completionHandler: (void (^)(NSString* output, NSError* error)) handler;



@end
