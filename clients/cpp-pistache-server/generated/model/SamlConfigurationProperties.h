/**
* Adobe Experience Manager (AEM) API
* Swagger AEM is an OpenAPI specification for Adobe Experience Manager (AEM) API
*
* The version of the OpenAPI document: 3.5.0-pre.0
* Contact: opensource@shinesolutions.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
/*
 * SamlConfigurationProperties.h
 *
 * 
 */

#ifndef SamlConfigurationProperties_H_
#define SamlConfigurationProperties_H_


#include "SamlConfigurationPropertyItemsBoolean.h"
#include "SamlConfigurationPropertyItemsString.h"
#include "SamlConfigurationPropertyItemsLong.h"
#include "SamlConfigurationPropertyItemsArray.h"
#include <nlohmann/json.hpp>

namespace org::openapitools::server::model
{

/// <summary>
/// 
/// </summary>
class  SamlConfigurationProperties
{
public:
    SamlConfigurationProperties();
    virtual ~SamlConfigurationProperties() = default;


    /// <summary>
    /// Validate the current data in the model. Throws a ValidationException on failure.
    /// </summary>
    void validate() const;

    /// <summary>
    /// Validate the current data in the model. Returns false on error and writes an error
    /// message into the given stringstream.
    /// </summary>
    bool validate(std::stringstream& msg) const;

    /// <summary>
    /// Helper overload for validate. Used when one model stores another model and calls it's validate.
    /// Not meant to be called outside that case.
    /// </summary>
    bool validate(std::stringstream& msg, const std::string& pathPrefix) const;

    bool operator==(const SamlConfigurationProperties& rhs) const;
    bool operator!=(const SamlConfigurationProperties& rhs) const;

    /////////////////////////////////////////////
    /// SamlConfigurationProperties members

    /// <summary>
    /// 
    /// </summary>
    SamlConfigurationPropertyItemsArray getPath() const;
    void setPath(SamlConfigurationPropertyItemsArray const& value);
    bool pathIsSet() const;
    void unsetPath();
    /// <summary>
    /// 
    /// </summary>
    SamlConfigurationPropertyItemsLong getServiceRanking() const;
    void setServiceRanking(SamlConfigurationPropertyItemsLong const& value);
    bool serviceRankingIsSet() const;
    void unsetService_ranking();
    /// <summary>
    /// 
    /// </summary>
    SamlConfigurationPropertyItemsString getIdpUrl() const;
    void setIdpUrl(SamlConfigurationPropertyItemsString const& value);
    bool idpUrlIsSet() const;
    void unsetIdpUrl();
    /// <summary>
    /// 
    /// </summary>
    SamlConfigurationPropertyItemsString getIdpCertAlias() const;
    void setIdpCertAlias(SamlConfigurationPropertyItemsString const& value);
    bool idpCertAliasIsSet() const;
    void unsetIdpCertAlias();
    /// <summary>
    /// 
    /// </summary>
    SamlConfigurationPropertyItemsBoolean getIdpHttpRedirect() const;
    void setIdpHttpRedirect(SamlConfigurationPropertyItemsBoolean const& value);
    bool idpHttpRedirectIsSet() const;
    void unsetIdpHttpRedirect();
    /// <summary>
    /// 
    /// </summary>
    SamlConfigurationPropertyItemsString getServiceProviderEntityId() const;
    void setServiceProviderEntityId(SamlConfigurationPropertyItemsString const& value);
    bool serviceProviderEntityIdIsSet() const;
    void unsetServiceProviderEntityId();
    /// <summary>
    /// 
    /// </summary>
    SamlConfigurationPropertyItemsString getAssertionConsumerServiceURL() const;
    void setAssertionConsumerServiceURL(SamlConfigurationPropertyItemsString const& value);
    bool assertionConsumerServiceURLIsSet() const;
    void unsetAssertionConsumerServiceURL();
    /// <summary>
    /// 
    /// </summary>
    SamlConfigurationPropertyItemsString getSpPrivateKeyAlias() const;
    void setSpPrivateKeyAlias(SamlConfigurationPropertyItemsString const& value);
    bool spPrivateKeyAliasIsSet() const;
    void unsetSpPrivateKeyAlias();
    /// <summary>
    /// 
    /// </summary>
    SamlConfigurationPropertyItemsString getKeyStorePassword() const;
    void setKeyStorePassword(SamlConfigurationPropertyItemsString const& value);
    bool keyStorePasswordIsSet() const;
    void unsetKeyStorePassword();
    /// <summary>
    /// 
    /// </summary>
    SamlConfigurationPropertyItemsString getDefaultRedirectUrl() const;
    void setDefaultRedirectUrl(SamlConfigurationPropertyItemsString const& value);
    bool defaultRedirectUrlIsSet() const;
    void unsetDefaultRedirectUrl();
    /// <summary>
    /// 
    /// </summary>
    SamlConfigurationPropertyItemsString getUserIDAttribute() const;
    void setUserIDAttribute(SamlConfigurationPropertyItemsString const& value);
    bool userIDAttributeIsSet() const;
    void unsetUserIDAttribute();
    /// <summary>
    /// 
    /// </summary>
    SamlConfigurationPropertyItemsBoolean getUseEncryption() const;
    void setUseEncryption(SamlConfigurationPropertyItemsBoolean const& value);
    bool useEncryptionIsSet() const;
    void unsetUseEncryption();
    /// <summary>
    /// 
    /// </summary>
    SamlConfigurationPropertyItemsBoolean getCreateUser() const;
    void setCreateUser(SamlConfigurationPropertyItemsBoolean const& value);
    bool createUserIsSet() const;
    void unsetCreateUser();
    /// <summary>
    /// 
    /// </summary>
    SamlConfigurationPropertyItemsBoolean getAddGroupMemberships() const;
    void setAddGroupMemberships(SamlConfigurationPropertyItemsBoolean const& value);
    bool addGroupMembershipsIsSet() const;
    void unsetAddGroupMemberships();
    /// <summary>
    /// 
    /// </summary>
    SamlConfigurationPropertyItemsString getGroupMembershipAttribute() const;
    void setGroupMembershipAttribute(SamlConfigurationPropertyItemsString const& value);
    bool groupMembershipAttributeIsSet() const;
    void unsetGroupMembershipAttribute();
    /// <summary>
    /// 
    /// </summary>
    SamlConfigurationPropertyItemsArray getDefaultGroups() const;
    void setDefaultGroups(SamlConfigurationPropertyItemsArray const& value);
    bool defaultGroupsIsSet() const;
    void unsetDefaultGroups();
    /// <summary>
    /// 
    /// </summary>
    SamlConfigurationPropertyItemsString getNameIdFormat() const;
    void setNameIdFormat(SamlConfigurationPropertyItemsString const& value);
    bool nameIdFormatIsSet() const;
    void unsetNameIdFormat();
    /// <summary>
    /// 
    /// </summary>
    SamlConfigurationPropertyItemsArray getSynchronizeAttributes() const;
    void setSynchronizeAttributes(SamlConfigurationPropertyItemsArray const& value);
    bool synchronizeAttributesIsSet() const;
    void unsetSynchronizeAttributes();
    /// <summary>
    /// 
    /// </summary>
    SamlConfigurationPropertyItemsBoolean getHandleLogout() const;
    void setHandleLogout(SamlConfigurationPropertyItemsBoolean const& value);
    bool handleLogoutIsSet() const;
    void unsetHandleLogout();
    /// <summary>
    /// 
    /// </summary>
    SamlConfigurationPropertyItemsString getLogoutUrl() const;
    void setLogoutUrl(SamlConfigurationPropertyItemsString const& value);
    bool logoutUrlIsSet() const;
    void unsetLogoutUrl();
    /// <summary>
    /// 
    /// </summary>
    SamlConfigurationPropertyItemsLong getClockTolerance() const;
    void setClockTolerance(SamlConfigurationPropertyItemsLong const& value);
    bool clockToleranceIsSet() const;
    void unsetClockTolerance();
    /// <summary>
    /// 
    /// </summary>
    SamlConfigurationPropertyItemsString getDigestMethod() const;
    void setDigestMethod(SamlConfigurationPropertyItemsString const& value);
    bool digestMethodIsSet() const;
    void unsetDigestMethod();
    /// <summary>
    /// 
    /// </summary>
    SamlConfigurationPropertyItemsString getSignatureMethod() const;
    void setSignatureMethod(SamlConfigurationPropertyItemsString const& value);
    bool signatureMethodIsSet() const;
    void unsetSignatureMethod();
    /// <summary>
    /// 
    /// </summary>
    SamlConfigurationPropertyItemsString getUserIntermediatePath() const;
    void setUserIntermediatePath(SamlConfigurationPropertyItemsString const& value);
    bool userIntermediatePathIsSet() const;
    void unsetUserIntermediatePath();

    friend void to_json(nlohmann::json& j, const SamlConfigurationProperties& o);
    friend void from_json(const nlohmann::json& j, SamlConfigurationProperties& o);
protected:
    SamlConfigurationPropertyItemsArray m_Path;
    bool m_PathIsSet;
    SamlConfigurationPropertyItemsLong m_Service_ranking;
    bool m_Service_rankingIsSet;
    SamlConfigurationPropertyItemsString m_IdpUrl;
    bool m_IdpUrlIsSet;
    SamlConfigurationPropertyItemsString m_IdpCertAlias;
    bool m_IdpCertAliasIsSet;
    SamlConfigurationPropertyItemsBoolean m_IdpHttpRedirect;
    bool m_IdpHttpRedirectIsSet;
    SamlConfigurationPropertyItemsString m_ServiceProviderEntityId;
    bool m_ServiceProviderEntityIdIsSet;
    SamlConfigurationPropertyItemsString m_AssertionConsumerServiceURL;
    bool m_AssertionConsumerServiceURLIsSet;
    SamlConfigurationPropertyItemsString m_SpPrivateKeyAlias;
    bool m_SpPrivateKeyAliasIsSet;
    SamlConfigurationPropertyItemsString m_KeyStorePassword;
    bool m_KeyStorePasswordIsSet;
    SamlConfigurationPropertyItemsString m_DefaultRedirectUrl;
    bool m_DefaultRedirectUrlIsSet;
    SamlConfigurationPropertyItemsString m_UserIDAttribute;
    bool m_UserIDAttributeIsSet;
    SamlConfigurationPropertyItemsBoolean m_UseEncryption;
    bool m_UseEncryptionIsSet;
    SamlConfigurationPropertyItemsBoolean m_CreateUser;
    bool m_CreateUserIsSet;
    SamlConfigurationPropertyItemsBoolean m_AddGroupMemberships;
    bool m_AddGroupMembershipsIsSet;
    SamlConfigurationPropertyItemsString m_GroupMembershipAttribute;
    bool m_GroupMembershipAttributeIsSet;
    SamlConfigurationPropertyItemsArray m_DefaultGroups;
    bool m_DefaultGroupsIsSet;
    SamlConfigurationPropertyItemsString m_NameIdFormat;
    bool m_NameIdFormatIsSet;
    SamlConfigurationPropertyItemsArray m_SynchronizeAttributes;
    bool m_SynchronizeAttributesIsSet;
    SamlConfigurationPropertyItemsBoolean m_HandleLogout;
    bool m_HandleLogoutIsSet;
    SamlConfigurationPropertyItemsString m_LogoutUrl;
    bool m_LogoutUrlIsSet;
    SamlConfigurationPropertyItemsLong m_ClockTolerance;
    bool m_ClockToleranceIsSet;
    SamlConfigurationPropertyItemsString m_DigestMethod;
    bool m_DigestMethodIsSet;
    SamlConfigurationPropertyItemsString m_SignatureMethod;
    bool m_SignatureMethodIsSet;
    SamlConfigurationPropertyItemsString m_UserIntermediatePath;
    bool m_UserIntermediatePathIsSet;
    
};

} // namespace org::openapitools::server::model

#endif /* SamlConfigurationProperties_H_ */
