/**
* Adobe Experience Manager (AEM) API
* Swagger AEM is an OpenAPI specification for Adobe Experience Manager (AEM) API
*
* The version of the OpenAPI document: 3.5.0-pre.0
* Contact: opensource@shinesolutions.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/


#include "SamlConfigurationProperties.h"
#include "Helpers.h"

#include <sstream>

namespace org::openapitools::server::model
{

SamlConfigurationProperties::SamlConfigurationProperties()
{
    m_PathIsSet = false;
    m_Service_rankingIsSet = false;
    m_IdpUrlIsSet = false;
    m_IdpCertAliasIsSet = false;
    m_IdpHttpRedirectIsSet = false;
    m_ServiceProviderEntityIdIsSet = false;
    m_AssertionConsumerServiceURLIsSet = false;
    m_SpPrivateKeyAliasIsSet = false;
    m_KeyStorePasswordIsSet = false;
    m_DefaultRedirectUrlIsSet = false;
    m_UserIDAttributeIsSet = false;
    m_UseEncryptionIsSet = false;
    m_CreateUserIsSet = false;
    m_AddGroupMembershipsIsSet = false;
    m_GroupMembershipAttributeIsSet = false;
    m_DefaultGroupsIsSet = false;
    m_NameIdFormatIsSet = false;
    m_SynchronizeAttributesIsSet = false;
    m_HandleLogoutIsSet = false;
    m_LogoutUrlIsSet = false;
    m_ClockToleranceIsSet = false;
    m_DigestMethodIsSet = false;
    m_SignatureMethodIsSet = false;
    m_UserIntermediatePathIsSet = false;
    
}

void SamlConfigurationProperties::validate() const
{
    std::stringstream msg;
    if (!validate(msg))
    {
        throw org::openapitools::server::helpers::ValidationException(msg.str());
    }
}

bool SamlConfigurationProperties::validate(std::stringstream& msg) const
{
    return validate(msg, "");
}

bool SamlConfigurationProperties::validate(std::stringstream& msg, const std::string& pathPrefix) const
{
    bool success = true;
    const std::string _pathPrefix = pathPrefix.empty() ? "SamlConfigurationProperties" : pathPrefix;

                                                                                                    
    return success;
}

bool SamlConfigurationProperties::operator==(const SamlConfigurationProperties& rhs) const
{
    return
    
    
    
    ((!pathIsSet() && !rhs.pathIsSet()) || (pathIsSet() && rhs.pathIsSet() && getPath() == rhs.getPath())) &&
    
    
    ((!serviceRankingIsSet() && !rhs.serviceRankingIsSet()) || (serviceRankingIsSet() && rhs.serviceRankingIsSet() && getServiceRanking() == rhs.getServiceRanking())) &&
    
    
    ((!idpUrlIsSet() && !rhs.idpUrlIsSet()) || (idpUrlIsSet() && rhs.idpUrlIsSet() && getIdpUrl() == rhs.getIdpUrl())) &&
    
    
    ((!idpCertAliasIsSet() && !rhs.idpCertAliasIsSet()) || (idpCertAliasIsSet() && rhs.idpCertAliasIsSet() && getIdpCertAlias() == rhs.getIdpCertAlias())) &&
    
    
    ((!idpHttpRedirectIsSet() && !rhs.idpHttpRedirectIsSet()) || (idpHttpRedirectIsSet() && rhs.idpHttpRedirectIsSet() && getIdpHttpRedirect() == rhs.getIdpHttpRedirect())) &&
    
    
    ((!serviceProviderEntityIdIsSet() && !rhs.serviceProviderEntityIdIsSet()) || (serviceProviderEntityIdIsSet() && rhs.serviceProviderEntityIdIsSet() && getServiceProviderEntityId() == rhs.getServiceProviderEntityId())) &&
    
    
    ((!assertionConsumerServiceURLIsSet() && !rhs.assertionConsumerServiceURLIsSet()) || (assertionConsumerServiceURLIsSet() && rhs.assertionConsumerServiceURLIsSet() && getAssertionConsumerServiceURL() == rhs.getAssertionConsumerServiceURL())) &&
    
    
    ((!spPrivateKeyAliasIsSet() && !rhs.spPrivateKeyAliasIsSet()) || (spPrivateKeyAliasIsSet() && rhs.spPrivateKeyAliasIsSet() && getSpPrivateKeyAlias() == rhs.getSpPrivateKeyAlias())) &&
    
    
    ((!keyStorePasswordIsSet() && !rhs.keyStorePasswordIsSet()) || (keyStorePasswordIsSet() && rhs.keyStorePasswordIsSet() && getKeyStorePassword() == rhs.getKeyStorePassword())) &&
    
    
    ((!defaultRedirectUrlIsSet() && !rhs.defaultRedirectUrlIsSet()) || (defaultRedirectUrlIsSet() && rhs.defaultRedirectUrlIsSet() && getDefaultRedirectUrl() == rhs.getDefaultRedirectUrl())) &&
    
    
    ((!userIDAttributeIsSet() && !rhs.userIDAttributeIsSet()) || (userIDAttributeIsSet() && rhs.userIDAttributeIsSet() && getUserIDAttribute() == rhs.getUserIDAttribute())) &&
    
    
    ((!useEncryptionIsSet() && !rhs.useEncryptionIsSet()) || (useEncryptionIsSet() && rhs.useEncryptionIsSet() && getUseEncryption() == rhs.getUseEncryption())) &&
    
    
    ((!createUserIsSet() && !rhs.createUserIsSet()) || (createUserIsSet() && rhs.createUserIsSet() && getCreateUser() == rhs.getCreateUser())) &&
    
    
    ((!addGroupMembershipsIsSet() && !rhs.addGroupMembershipsIsSet()) || (addGroupMembershipsIsSet() && rhs.addGroupMembershipsIsSet() && getAddGroupMemberships() == rhs.getAddGroupMemberships())) &&
    
    
    ((!groupMembershipAttributeIsSet() && !rhs.groupMembershipAttributeIsSet()) || (groupMembershipAttributeIsSet() && rhs.groupMembershipAttributeIsSet() && getGroupMembershipAttribute() == rhs.getGroupMembershipAttribute())) &&
    
    
    ((!defaultGroupsIsSet() && !rhs.defaultGroupsIsSet()) || (defaultGroupsIsSet() && rhs.defaultGroupsIsSet() && getDefaultGroups() == rhs.getDefaultGroups())) &&
    
    
    ((!nameIdFormatIsSet() && !rhs.nameIdFormatIsSet()) || (nameIdFormatIsSet() && rhs.nameIdFormatIsSet() && getNameIdFormat() == rhs.getNameIdFormat())) &&
    
    
    ((!synchronizeAttributesIsSet() && !rhs.synchronizeAttributesIsSet()) || (synchronizeAttributesIsSet() && rhs.synchronizeAttributesIsSet() && getSynchronizeAttributes() == rhs.getSynchronizeAttributes())) &&
    
    
    ((!handleLogoutIsSet() && !rhs.handleLogoutIsSet()) || (handleLogoutIsSet() && rhs.handleLogoutIsSet() && getHandleLogout() == rhs.getHandleLogout())) &&
    
    
    ((!logoutUrlIsSet() && !rhs.logoutUrlIsSet()) || (logoutUrlIsSet() && rhs.logoutUrlIsSet() && getLogoutUrl() == rhs.getLogoutUrl())) &&
    
    
    ((!clockToleranceIsSet() && !rhs.clockToleranceIsSet()) || (clockToleranceIsSet() && rhs.clockToleranceIsSet() && getClockTolerance() == rhs.getClockTolerance())) &&
    
    
    ((!digestMethodIsSet() && !rhs.digestMethodIsSet()) || (digestMethodIsSet() && rhs.digestMethodIsSet() && getDigestMethod() == rhs.getDigestMethod())) &&
    
    
    ((!signatureMethodIsSet() && !rhs.signatureMethodIsSet()) || (signatureMethodIsSet() && rhs.signatureMethodIsSet() && getSignatureMethod() == rhs.getSignatureMethod())) &&
    
    
    ((!userIntermediatePathIsSet() && !rhs.userIntermediatePathIsSet()) || (userIntermediatePathIsSet() && rhs.userIntermediatePathIsSet() && getUserIntermediatePath() == rhs.getUserIntermediatePath()))
    
    ;
}

bool SamlConfigurationProperties::operator!=(const SamlConfigurationProperties& rhs) const
{
    return !(*this == rhs);
}

void to_json(nlohmann::json& j, const SamlConfigurationProperties& o)
{
    j = nlohmann::json();
    if(o.pathIsSet())
        j["path"] = o.m_Path;
    if(o.serviceRankingIsSet())
        j["service.ranking"] = o.m_Service_ranking;
    if(o.idpUrlIsSet())
        j["idpUrl"] = o.m_IdpUrl;
    if(o.idpCertAliasIsSet())
        j["idpCertAlias"] = o.m_IdpCertAlias;
    if(o.idpHttpRedirectIsSet())
        j["idpHttpRedirect"] = o.m_IdpHttpRedirect;
    if(o.serviceProviderEntityIdIsSet())
        j["serviceProviderEntityId"] = o.m_ServiceProviderEntityId;
    if(o.assertionConsumerServiceURLIsSet())
        j["assertionConsumerServiceURL"] = o.m_AssertionConsumerServiceURL;
    if(o.spPrivateKeyAliasIsSet())
        j["spPrivateKeyAlias"] = o.m_SpPrivateKeyAlias;
    if(o.keyStorePasswordIsSet())
        j["keyStorePassword"] = o.m_KeyStorePassword;
    if(o.defaultRedirectUrlIsSet())
        j["defaultRedirectUrl"] = o.m_DefaultRedirectUrl;
    if(o.userIDAttributeIsSet())
        j["userIDAttribute"] = o.m_UserIDAttribute;
    if(o.useEncryptionIsSet())
        j["useEncryption"] = o.m_UseEncryption;
    if(o.createUserIsSet())
        j["createUser"] = o.m_CreateUser;
    if(o.addGroupMembershipsIsSet())
        j["addGroupMemberships"] = o.m_AddGroupMemberships;
    if(o.groupMembershipAttributeIsSet())
        j["groupMembershipAttribute"] = o.m_GroupMembershipAttribute;
    if(o.defaultGroupsIsSet())
        j["defaultGroups"] = o.m_DefaultGroups;
    if(o.nameIdFormatIsSet())
        j["nameIdFormat"] = o.m_NameIdFormat;
    if(o.synchronizeAttributesIsSet())
        j["synchronizeAttributes"] = o.m_SynchronizeAttributes;
    if(o.handleLogoutIsSet())
        j["handleLogout"] = o.m_HandleLogout;
    if(o.logoutUrlIsSet())
        j["logoutUrl"] = o.m_LogoutUrl;
    if(o.clockToleranceIsSet())
        j["clockTolerance"] = o.m_ClockTolerance;
    if(o.digestMethodIsSet())
        j["digestMethod"] = o.m_DigestMethod;
    if(o.signatureMethodIsSet())
        j["signatureMethod"] = o.m_SignatureMethod;
    if(o.userIntermediatePathIsSet())
        j["userIntermediatePath"] = o.m_UserIntermediatePath;
    
}

void from_json(const nlohmann::json& j, SamlConfigurationProperties& o)
{
    if(j.find("path") != j.end())
    {
        j.at("path").get_to(o.m_Path);
        o.m_PathIsSet = true;
    } 
    if(j.find("service.ranking") != j.end())
    {
        j.at("service.ranking").get_to(o.m_Service_ranking);
        o.m_Service_rankingIsSet = true;
    } 
    if(j.find("idpUrl") != j.end())
    {
        j.at("idpUrl").get_to(o.m_IdpUrl);
        o.m_IdpUrlIsSet = true;
    } 
    if(j.find("idpCertAlias") != j.end())
    {
        j.at("idpCertAlias").get_to(o.m_IdpCertAlias);
        o.m_IdpCertAliasIsSet = true;
    } 
    if(j.find("idpHttpRedirect") != j.end())
    {
        j.at("idpHttpRedirect").get_to(o.m_IdpHttpRedirect);
        o.m_IdpHttpRedirectIsSet = true;
    } 
    if(j.find("serviceProviderEntityId") != j.end())
    {
        j.at("serviceProviderEntityId").get_to(o.m_ServiceProviderEntityId);
        o.m_ServiceProviderEntityIdIsSet = true;
    } 
    if(j.find("assertionConsumerServiceURL") != j.end())
    {
        j.at("assertionConsumerServiceURL").get_to(o.m_AssertionConsumerServiceURL);
        o.m_AssertionConsumerServiceURLIsSet = true;
    } 
    if(j.find("spPrivateKeyAlias") != j.end())
    {
        j.at("spPrivateKeyAlias").get_to(o.m_SpPrivateKeyAlias);
        o.m_SpPrivateKeyAliasIsSet = true;
    } 
    if(j.find("keyStorePassword") != j.end())
    {
        j.at("keyStorePassword").get_to(o.m_KeyStorePassword);
        o.m_KeyStorePasswordIsSet = true;
    } 
    if(j.find("defaultRedirectUrl") != j.end())
    {
        j.at("defaultRedirectUrl").get_to(o.m_DefaultRedirectUrl);
        o.m_DefaultRedirectUrlIsSet = true;
    } 
    if(j.find("userIDAttribute") != j.end())
    {
        j.at("userIDAttribute").get_to(o.m_UserIDAttribute);
        o.m_UserIDAttributeIsSet = true;
    } 
    if(j.find("useEncryption") != j.end())
    {
        j.at("useEncryption").get_to(o.m_UseEncryption);
        o.m_UseEncryptionIsSet = true;
    } 
    if(j.find("createUser") != j.end())
    {
        j.at("createUser").get_to(o.m_CreateUser);
        o.m_CreateUserIsSet = true;
    } 
    if(j.find("addGroupMemberships") != j.end())
    {
        j.at("addGroupMemberships").get_to(o.m_AddGroupMemberships);
        o.m_AddGroupMembershipsIsSet = true;
    } 
    if(j.find("groupMembershipAttribute") != j.end())
    {
        j.at("groupMembershipAttribute").get_to(o.m_GroupMembershipAttribute);
        o.m_GroupMembershipAttributeIsSet = true;
    } 
    if(j.find("defaultGroups") != j.end())
    {
        j.at("defaultGroups").get_to(o.m_DefaultGroups);
        o.m_DefaultGroupsIsSet = true;
    } 
    if(j.find("nameIdFormat") != j.end())
    {
        j.at("nameIdFormat").get_to(o.m_NameIdFormat);
        o.m_NameIdFormatIsSet = true;
    } 
    if(j.find("synchronizeAttributes") != j.end())
    {
        j.at("synchronizeAttributes").get_to(o.m_SynchronizeAttributes);
        o.m_SynchronizeAttributesIsSet = true;
    } 
    if(j.find("handleLogout") != j.end())
    {
        j.at("handleLogout").get_to(o.m_HandleLogout);
        o.m_HandleLogoutIsSet = true;
    } 
    if(j.find("logoutUrl") != j.end())
    {
        j.at("logoutUrl").get_to(o.m_LogoutUrl);
        o.m_LogoutUrlIsSet = true;
    } 
    if(j.find("clockTolerance") != j.end())
    {
        j.at("clockTolerance").get_to(o.m_ClockTolerance);
        o.m_ClockToleranceIsSet = true;
    } 
    if(j.find("digestMethod") != j.end())
    {
        j.at("digestMethod").get_to(o.m_DigestMethod);
        o.m_DigestMethodIsSet = true;
    } 
    if(j.find("signatureMethod") != j.end())
    {
        j.at("signatureMethod").get_to(o.m_SignatureMethod);
        o.m_SignatureMethodIsSet = true;
    } 
    if(j.find("userIntermediatePath") != j.end())
    {
        j.at("userIntermediatePath").get_to(o.m_UserIntermediatePath);
        o.m_UserIntermediatePathIsSet = true;
    } 
    
}

SamlConfigurationPropertyItemsArray SamlConfigurationProperties::getPath() const
{
    return m_Path;
}
void SamlConfigurationProperties::setPath(SamlConfigurationPropertyItemsArray const& value)
{
    m_Path = value;
    m_PathIsSet = true;
}
bool SamlConfigurationProperties::pathIsSet() const
{
    return m_PathIsSet;
}
void SamlConfigurationProperties::unsetPath()
{
    m_PathIsSet = false;
}
SamlConfigurationPropertyItemsLong SamlConfigurationProperties::getServiceRanking() const
{
    return m_Service_ranking;
}
void SamlConfigurationProperties::setServiceRanking(SamlConfigurationPropertyItemsLong const& value)
{
    m_Service_ranking = value;
    m_Service_rankingIsSet = true;
}
bool SamlConfigurationProperties::serviceRankingIsSet() const
{
    return m_Service_rankingIsSet;
}
void SamlConfigurationProperties::unsetService_ranking()
{
    m_Service_rankingIsSet = false;
}
SamlConfigurationPropertyItemsString SamlConfigurationProperties::getIdpUrl() const
{
    return m_IdpUrl;
}
void SamlConfigurationProperties::setIdpUrl(SamlConfigurationPropertyItemsString const& value)
{
    m_IdpUrl = value;
    m_IdpUrlIsSet = true;
}
bool SamlConfigurationProperties::idpUrlIsSet() const
{
    return m_IdpUrlIsSet;
}
void SamlConfigurationProperties::unsetIdpUrl()
{
    m_IdpUrlIsSet = false;
}
SamlConfigurationPropertyItemsString SamlConfigurationProperties::getIdpCertAlias() const
{
    return m_IdpCertAlias;
}
void SamlConfigurationProperties::setIdpCertAlias(SamlConfigurationPropertyItemsString const& value)
{
    m_IdpCertAlias = value;
    m_IdpCertAliasIsSet = true;
}
bool SamlConfigurationProperties::idpCertAliasIsSet() const
{
    return m_IdpCertAliasIsSet;
}
void SamlConfigurationProperties::unsetIdpCertAlias()
{
    m_IdpCertAliasIsSet = false;
}
SamlConfigurationPropertyItemsBoolean SamlConfigurationProperties::getIdpHttpRedirect() const
{
    return m_IdpHttpRedirect;
}
void SamlConfigurationProperties::setIdpHttpRedirect(SamlConfigurationPropertyItemsBoolean const& value)
{
    m_IdpHttpRedirect = value;
    m_IdpHttpRedirectIsSet = true;
}
bool SamlConfigurationProperties::idpHttpRedirectIsSet() const
{
    return m_IdpHttpRedirectIsSet;
}
void SamlConfigurationProperties::unsetIdpHttpRedirect()
{
    m_IdpHttpRedirectIsSet = false;
}
SamlConfigurationPropertyItemsString SamlConfigurationProperties::getServiceProviderEntityId() const
{
    return m_ServiceProviderEntityId;
}
void SamlConfigurationProperties::setServiceProviderEntityId(SamlConfigurationPropertyItemsString const& value)
{
    m_ServiceProviderEntityId = value;
    m_ServiceProviderEntityIdIsSet = true;
}
bool SamlConfigurationProperties::serviceProviderEntityIdIsSet() const
{
    return m_ServiceProviderEntityIdIsSet;
}
void SamlConfigurationProperties::unsetServiceProviderEntityId()
{
    m_ServiceProviderEntityIdIsSet = false;
}
SamlConfigurationPropertyItemsString SamlConfigurationProperties::getAssertionConsumerServiceURL() const
{
    return m_AssertionConsumerServiceURL;
}
void SamlConfigurationProperties::setAssertionConsumerServiceURL(SamlConfigurationPropertyItemsString const& value)
{
    m_AssertionConsumerServiceURL = value;
    m_AssertionConsumerServiceURLIsSet = true;
}
bool SamlConfigurationProperties::assertionConsumerServiceURLIsSet() const
{
    return m_AssertionConsumerServiceURLIsSet;
}
void SamlConfigurationProperties::unsetAssertionConsumerServiceURL()
{
    m_AssertionConsumerServiceURLIsSet = false;
}
SamlConfigurationPropertyItemsString SamlConfigurationProperties::getSpPrivateKeyAlias() const
{
    return m_SpPrivateKeyAlias;
}
void SamlConfigurationProperties::setSpPrivateKeyAlias(SamlConfigurationPropertyItemsString const& value)
{
    m_SpPrivateKeyAlias = value;
    m_SpPrivateKeyAliasIsSet = true;
}
bool SamlConfigurationProperties::spPrivateKeyAliasIsSet() const
{
    return m_SpPrivateKeyAliasIsSet;
}
void SamlConfigurationProperties::unsetSpPrivateKeyAlias()
{
    m_SpPrivateKeyAliasIsSet = false;
}
SamlConfigurationPropertyItemsString SamlConfigurationProperties::getKeyStorePassword() const
{
    return m_KeyStorePassword;
}
void SamlConfigurationProperties::setKeyStorePassword(SamlConfigurationPropertyItemsString const& value)
{
    m_KeyStorePassword = value;
    m_KeyStorePasswordIsSet = true;
}
bool SamlConfigurationProperties::keyStorePasswordIsSet() const
{
    return m_KeyStorePasswordIsSet;
}
void SamlConfigurationProperties::unsetKeyStorePassword()
{
    m_KeyStorePasswordIsSet = false;
}
SamlConfigurationPropertyItemsString SamlConfigurationProperties::getDefaultRedirectUrl() const
{
    return m_DefaultRedirectUrl;
}
void SamlConfigurationProperties::setDefaultRedirectUrl(SamlConfigurationPropertyItemsString const& value)
{
    m_DefaultRedirectUrl = value;
    m_DefaultRedirectUrlIsSet = true;
}
bool SamlConfigurationProperties::defaultRedirectUrlIsSet() const
{
    return m_DefaultRedirectUrlIsSet;
}
void SamlConfigurationProperties::unsetDefaultRedirectUrl()
{
    m_DefaultRedirectUrlIsSet = false;
}
SamlConfigurationPropertyItemsString SamlConfigurationProperties::getUserIDAttribute() const
{
    return m_UserIDAttribute;
}
void SamlConfigurationProperties::setUserIDAttribute(SamlConfigurationPropertyItemsString const& value)
{
    m_UserIDAttribute = value;
    m_UserIDAttributeIsSet = true;
}
bool SamlConfigurationProperties::userIDAttributeIsSet() const
{
    return m_UserIDAttributeIsSet;
}
void SamlConfigurationProperties::unsetUserIDAttribute()
{
    m_UserIDAttributeIsSet = false;
}
SamlConfigurationPropertyItemsBoolean SamlConfigurationProperties::getUseEncryption() const
{
    return m_UseEncryption;
}
void SamlConfigurationProperties::setUseEncryption(SamlConfigurationPropertyItemsBoolean const& value)
{
    m_UseEncryption = value;
    m_UseEncryptionIsSet = true;
}
bool SamlConfigurationProperties::useEncryptionIsSet() const
{
    return m_UseEncryptionIsSet;
}
void SamlConfigurationProperties::unsetUseEncryption()
{
    m_UseEncryptionIsSet = false;
}
SamlConfigurationPropertyItemsBoolean SamlConfigurationProperties::getCreateUser() const
{
    return m_CreateUser;
}
void SamlConfigurationProperties::setCreateUser(SamlConfigurationPropertyItemsBoolean const& value)
{
    m_CreateUser = value;
    m_CreateUserIsSet = true;
}
bool SamlConfigurationProperties::createUserIsSet() const
{
    return m_CreateUserIsSet;
}
void SamlConfigurationProperties::unsetCreateUser()
{
    m_CreateUserIsSet = false;
}
SamlConfigurationPropertyItemsBoolean SamlConfigurationProperties::getAddGroupMemberships() const
{
    return m_AddGroupMemberships;
}
void SamlConfigurationProperties::setAddGroupMemberships(SamlConfigurationPropertyItemsBoolean const& value)
{
    m_AddGroupMemberships = value;
    m_AddGroupMembershipsIsSet = true;
}
bool SamlConfigurationProperties::addGroupMembershipsIsSet() const
{
    return m_AddGroupMembershipsIsSet;
}
void SamlConfigurationProperties::unsetAddGroupMemberships()
{
    m_AddGroupMembershipsIsSet = false;
}
SamlConfigurationPropertyItemsString SamlConfigurationProperties::getGroupMembershipAttribute() const
{
    return m_GroupMembershipAttribute;
}
void SamlConfigurationProperties::setGroupMembershipAttribute(SamlConfigurationPropertyItemsString const& value)
{
    m_GroupMembershipAttribute = value;
    m_GroupMembershipAttributeIsSet = true;
}
bool SamlConfigurationProperties::groupMembershipAttributeIsSet() const
{
    return m_GroupMembershipAttributeIsSet;
}
void SamlConfigurationProperties::unsetGroupMembershipAttribute()
{
    m_GroupMembershipAttributeIsSet = false;
}
SamlConfigurationPropertyItemsArray SamlConfigurationProperties::getDefaultGroups() const
{
    return m_DefaultGroups;
}
void SamlConfigurationProperties::setDefaultGroups(SamlConfigurationPropertyItemsArray const& value)
{
    m_DefaultGroups = value;
    m_DefaultGroupsIsSet = true;
}
bool SamlConfigurationProperties::defaultGroupsIsSet() const
{
    return m_DefaultGroupsIsSet;
}
void SamlConfigurationProperties::unsetDefaultGroups()
{
    m_DefaultGroupsIsSet = false;
}
SamlConfigurationPropertyItemsString SamlConfigurationProperties::getNameIdFormat() const
{
    return m_NameIdFormat;
}
void SamlConfigurationProperties::setNameIdFormat(SamlConfigurationPropertyItemsString const& value)
{
    m_NameIdFormat = value;
    m_NameIdFormatIsSet = true;
}
bool SamlConfigurationProperties::nameIdFormatIsSet() const
{
    return m_NameIdFormatIsSet;
}
void SamlConfigurationProperties::unsetNameIdFormat()
{
    m_NameIdFormatIsSet = false;
}
SamlConfigurationPropertyItemsArray SamlConfigurationProperties::getSynchronizeAttributes() const
{
    return m_SynchronizeAttributes;
}
void SamlConfigurationProperties::setSynchronizeAttributes(SamlConfigurationPropertyItemsArray const& value)
{
    m_SynchronizeAttributes = value;
    m_SynchronizeAttributesIsSet = true;
}
bool SamlConfigurationProperties::synchronizeAttributesIsSet() const
{
    return m_SynchronizeAttributesIsSet;
}
void SamlConfigurationProperties::unsetSynchronizeAttributes()
{
    m_SynchronizeAttributesIsSet = false;
}
SamlConfigurationPropertyItemsBoolean SamlConfigurationProperties::getHandleLogout() const
{
    return m_HandleLogout;
}
void SamlConfigurationProperties::setHandleLogout(SamlConfigurationPropertyItemsBoolean const& value)
{
    m_HandleLogout = value;
    m_HandleLogoutIsSet = true;
}
bool SamlConfigurationProperties::handleLogoutIsSet() const
{
    return m_HandleLogoutIsSet;
}
void SamlConfigurationProperties::unsetHandleLogout()
{
    m_HandleLogoutIsSet = false;
}
SamlConfigurationPropertyItemsString SamlConfigurationProperties::getLogoutUrl() const
{
    return m_LogoutUrl;
}
void SamlConfigurationProperties::setLogoutUrl(SamlConfigurationPropertyItemsString const& value)
{
    m_LogoutUrl = value;
    m_LogoutUrlIsSet = true;
}
bool SamlConfigurationProperties::logoutUrlIsSet() const
{
    return m_LogoutUrlIsSet;
}
void SamlConfigurationProperties::unsetLogoutUrl()
{
    m_LogoutUrlIsSet = false;
}
SamlConfigurationPropertyItemsLong SamlConfigurationProperties::getClockTolerance() const
{
    return m_ClockTolerance;
}
void SamlConfigurationProperties::setClockTolerance(SamlConfigurationPropertyItemsLong const& value)
{
    m_ClockTolerance = value;
    m_ClockToleranceIsSet = true;
}
bool SamlConfigurationProperties::clockToleranceIsSet() const
{
    return m_ClockToleranceIsSet;
}
void SamlConfigurationProperties::unsetClockTolerance()
{
    m_ClockToleranceIsSet = false;
}
SamlConfigurationPropertyItemsString SamlConfigurationProperties::getDigestMethod() const
{
    return m_DigestMethod;
}
void SamlConfigurationProperties::setDigestMethod(SamlConfigurationPropertyItemsString const& value)
{
    m_DigestMethod = value;
    m_DigestMethodIsSet = true;
}
bool SamlConfigurationProperties::digestMethodIsSet() const
{
    return m_DigestMethodIsSet;
}
void SamlConfigurationProperties::unsetDigestMethod()
{
    m_DigestMethodIsSet = false;
}
SamlConfigurationPropertyItemsString SamlConfigurationProperties::getSignatureMethod() const
{
    return m_SignatureMethod;
}
void SamlConfigurationProperties::setSignatureMethod(SamlConfigurationPropertyItemsString const& value)
{
    m_SignatureMethod = value;
    m_SignatureMethodIsSet = true;
}
bool SamlConfigurationProperties::signatureMethodIsSet() const
{
    return m_SignatureMethodIsSet;
}
void SamlConfigurationProperties::unsetSignatureMethod()
{
    m_SignatureMethodIsSet = false;
}
SamlConfigurationPropertyItemsString SamlConfigurationProperties::getUserIntermediatePath() const
{
    return m_UserIntermediatePath;
}
void SamlConfigurationProperties::setUserIntermediatePath(SamlConfigurationPropertyItemsString const& value)
{
    m_UserIntermediatePath = value;
    m_UserIntermediatePathIsSet = true;
}
bool SamlConfigurationProperties::userIntermediatePathIsSet() const
{
    return m_UserIntermediatePathIsSet;
}
void SamlConfigurationProperties::unsetUserIntermediatePath()
{
    m_UserIntermediatePathIsSet = false;
}


} // namespace org::openapitools::server::model

