/**
* Adobe Experience Manager (AEM) API
* Swagger AEM is an OpenAPI specification for Adobe Experience Manager (AEM) API
*
* The version of the OpenAPI document: 3.5.0-pre.0
* Contact: opensource@shinesolutions.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/


#include "BundleDataProp.h"
#include "Helpers.h"

#include <sstream>

namespace org::openapitools::server::model
{

BundleDataProp::BundleDataProp()
{
    m_Key = "";
    m_KeyIsSet = false;
    m_Value = "";
    m_ValueIsSet = false;
    
}

void BundleDataProp::validate() const
{
    std::stringstream msg;
    if (!validate(msg))
    {
        throw org::openapitools::server::helpers::ValidationException(msg.str());
    }
}

bool BundleDataProp::validate(std::stringstream& msg) const
{
    return validate(msg, "");
}

bool BundleDataProp::validate(std::stringstream& msg, const std::string& pathPrefix) const
{
    bool success = true;
    const std::string _pathPrefix = pathPrefix.empty() ? "BundleDataProp" : pathPrefix;

            
    return success;
}

bool BundleDataProp::operator==(const BundleDataProp& rhs) const
{
    return
    
    
    
    ((!keyIsSet() && !rhs.keyIsSet()) || (keyIsSet() && rhs.keyIsSet() && getKey() == rhs.getKey())) &&
    
    
    ((!valueIsSet() && !rhs.valueIsSet()) || (valueIsSet() && rhs.valueIsSet() && getValue() == rhs.getValue()))
    
    ;
}

bool BundleDataProp::operator!=(const BundleDataProp& rhs) const
{
    return !(*this == rhs);
}

void to_json(nlohmann::json& j, const BundleDataProp& o)
{
    j = nlohmann::json();
    if(o.keyIsSet())
        j["key"] = o.m_Key;
    if(o.valueIsSet())
        j["value"] = o.m_Value;
    
}

void from_json(const nlohmann::json& j, BundleDataProp& o)
{
    if(j.find("key") != j.end())
    {
        j.at("key").get_to(o.m_Key);
        o.m_KeyIsSet = true;
    } 
    if(j.find("value") != j.end())
    {
        j.at("value").get_to(o.m_Value);
        o.m_ValueIsSet = true;
    } 
    
}

std::string BundleDataProp::getKey() const
{
    return m_Key;
}
void BundleDataProp::setKey(std::string const& value)
{
    m_Key = value;
    m_KeyIsSet = true;
}
bool BundleDataProp::keyIsSet() const
{
    return m_KeyIsSet;
}
void BundleDataProp::unsetKey()
{
    m_KeyIsSet = false;
}
std::string BundleDataProp::getValue() const
{
    return m_Value;
}
void BundleDataProp::setValue(std::string const& value)
{
    m_Value = value;
    m_ValueIsSet = true;
}
bool BundleDataProp::valueIsSet() const
{
    return m_ValueIsSet;
}
void BundleDataProp::unsetValue()
{
    m_ValueIsSet = false;
}


} // namespace org::openapitools::server::model

