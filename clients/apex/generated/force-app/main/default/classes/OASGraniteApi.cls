/*
 * Adobe Experience Manager (AEM) API
 * Swagger AEM is an OpenAPI specification for Adobe Experience Manager (AEM) API
 *
 * The version of the OpenAPI document: 3.5.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

public class OASGraniteApi {
    OASClient client;

    public OASGraniteApi(OASClient client) {
        this.client = client;
    }

    public OASGraniteApi() {
        this.client = new OASClient();
    }

    public OASClient getClient() {
        return this.client;
    }

    /**
     * 
     * 
     * @param keystorePassword  (required)
     * @param keystorePasswordConfirm  (required)
     * @param truststorePassword  (required)
     * @param truststorePasswordConfirm  (required)
     * @param httpsHostname  (required)
     * @param httpsPort  (required)
     * @param privatekeyFile  (optional)
     * @param certificateFile  (optional)
     * @return String
     * @throws OAS.ApiException if fails to make API call
     */
    public String sslSetup(Map<String, Object> params) {
        client.assertNotNull(params.get('keystorePassword'), 'keystorePassword');
        client.assertNotNull(params.get('keystorePasswordConfirm'), 'keystorePasswordConfirm');
        client.assertNotNull(params.get('truststorePassword'), 'truststorePassword');
        client.assertNotNull(params.get('truststorePasswordConfirm'), 'truststorePasswordConfirm');
        client.assertNotNull(params.get('httpsHostname'), 'httpsHostname');
        client.assertNotNull(params.get('httpsPort'), 'httpsPort');
        List<OAS.Param> query = new List<OAS.Param>();

        // cast query params to verify their expected type
        query.addAll(client.makeParam('keystorePassword', (String) params.get('keystorePassword')));
        query.addAll(client.makeParam('keystorePasswordConfirm', (String) params.get('keystorePasswordConfirm')));
        query.addAll(client.makeParam('truststorePassword', (String) params.get('truststorePassword')));
        query.addAll(client.makeParam('truststorePasswordConfirm', (String) params.get('truststorePasswordConfirm')));
        query.addAll(client.makeParam('httpsHostname', (String) params.get('httpsHostname')));
        query.addAll(client.makeParam('httpsPort', (String) params.get('httpsPort')));

        List<OAS.Param> form = new List<OAS.Param>();

        // cast form params to verify their expected type
        form.addAll(client.makeParam('privatekeyFile', (Blob) params.get('privatekeyFile')));
        form.addAll(client.makeParam('certificateFile', (Blob) params.get('certificateFile')));

        return (String) client.invoke(
            'POST', '/libs/granite/security/post/sslSetup.html', '',
            query, form,
            new Map<String, Object>(),
            new Map<String, Object>(),
            new List<String>{ 'text/plain' },
            new List<String>{ 'multipart/form-data' },
            new List<String> { 'aemAuth' },
            String.class
        );
    }
}
