/**
 * Adobe Experience Manager (AEM) API
 * Swagger AEM is an OpenAPI specification for Adobe Experience Manager (AEM) API
 *
 * The version of the OpenAPI document: 3.5.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 5.2.1.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */



#include "KeystoreChainItems.h"

#include <string>
#include <sstream>
#include <stdexcept>
#include <boost/property_tree/ptree.hpp>
#include <boost/property_tree/json_parser.hpp>

using boost::property_tree::ptree;
using boost::property_tree::read_json;
using boost::property_tree::write_json;

namespace org {
namespace openapitools {
namespace server {
namespace model {

KeystoreChainItems::KeystoreChainItems()
{
	m_Subject = "";
	m_Issuer = "";
	m_NotBefore = "";
	m_NotAfter = "";
	m_SerialNumber = 0;
}

KeystoreChainItems::~KeystoreChainItems()
{
}

std::string KeystoreChainItems::toJsonString(bool prettyJson)
{
	std::stringstream ss;
	write_json(ss, this->toPropertyTree(), prettyJson);
	return ss.str();
}

void KeystoreChainItems::fromJsonString(std::string const& jsonString)
{
	std::stringstream ss(jsonString);
	ptree pt;
	read_json(ss,pt);
	this->fromPropertyTree(pt);
}

ptree KeystoreChainItems::toPropertyTree()
{
	ptree pt;
	ptree tmp_node;
	pt.put("subject", m_Subject);
	pt.put("issuer", m_Issuer);
	pt.put("notBefore", m_NotBefore);
	pt.put("notAfter", m_NotAfter);
	pt.put("serialNumber", m_SerialNumber);
	return pt;
}

void KeystoreChainItems::fromPropertyTree(ptree const &pt)
{
	ptree tmp_node;
	m_Subject = pt.get("subject", "");
	m_Issuer = pt.get("issuer", "");
	m_NotBefore = pt.get("notBefore", "");
	m_NotAfter = pt.get("notAfter", "");
	m_SerialNumber = pt.get("serialNumber", 0);
}

std::string KeystoreChainItems::getSubject() const
{
    return m_Subject;
}
void KeystoreChainItems::setSubject(std::string value)
{
	m_Subject = value;
}
std::string KeystoreChainItems::getIssuer() const
{
    return m_Issuer;
}
void KeystoreChainItems::setIssuer(std::string value)
{
	m_Issuer = value;
}
std::string KeystoreChainItems::getNotBefore() const
{
    return m_NotBefore;
}
void KeystoreChainItems::setNotBefore(std::string value)
{
	m_NotBefore = value;
}
std::string KeystoreChainItems::getNotAfter() const
{
    return m_NotAfter;
}
void KeystoreChainItems::setNotAfter(std::string value)
{
	m_NotAfter = value;
}
int32_t KeystoreChainItems::getSerialNumber() const
{
    return m_SerialNumber;
}
void KeystoreChainItems::setSerialNumber(int32_t value)
{
	m_SerialNumber = value;
}

}
}
}
}

