/**
 * Adobe Experience Manager (AEM) API
 * Swagger AEM is an OpenAPI specification for Adobe Experience Manager (AEM) API
 *
 * The version of the OpenAPI document: 3.5.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 5.2.1.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * SamlConfigurationProperties.h
 *
 * 
 */

#ifndef SamlConfigurationProperties_H_
#define SamlConfigurationProperties_H_



#include "SamlConfigurationPropertyItemsBoolean.h"
#include "SamlConfigurationPropertyItemsString.h"
#include "SamlConfigurationPropertyItemsLong.h"
#include "SamlConfigurationPropertyItemsArray.h"
#include <memory>
#include <boost/property_tree/ptree.hpp>

namespace org {
namespace openapitools {
namespace server {
namespace model {

/// <summary>
/// 
/// </summary>
class  SamlConfigurationProperties 
{
public:
    SamlConfigurationProperties();
    virtual ~SamlConfigurationProperties();
    
    std::string toJsonString(bool prettyJson = false);
    void fromJsonString(std::string const& jsonString);
    boost::property_tree::ptree toPropertyTree();
    void fromPropertyTree(boost::property_tree::ptree const& pt);

    /////////////////////////////////////////////
    /// SamlConfigurationProperties members

    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<SamlConfigurationPropertyItemsArray> getPath() const;
    void setPath(std::shared_ptr<SamlConfigurationPropertyItemsArray> value);

    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<SamlConfigurationPropertyItemsLong> getServiceRanking() const;
    void setServiceRanking(std::shared_ptr<SamlConfigurationPropertyItemsLong> value);

    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<SamlConfigurationPropertyItemsString> getIdpUrl() const;
    void setIdpUrl(std::shared_ptr<SamlConfigurationPropertyItemsString> value);

    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<SamlConfigurationPropertyItemsString> getIdpCertAlias() const;
    void setIdpCertAlias(std::shared_ptr<SamlConfigurationPropertyItemsString> value);

    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<SamlConfigurationPropertyItemsBoolean> getIdpHttpRedirect() const;
    void setIdpHttpRedirect(std::shared_ptr<SamlConfigurationPropertyItemsBoolean> value);

    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<SamlConfigurationPropertyItemsString> getServiceProviderEntityId() const;
    void setServiceProviderEntityId(std::shared_ptr<SamlConfigurationPropertyItemsString> value);

    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<SamlConfigurationPropertyItemsString> getAssertionConsumerServiceURL() const;
    void setAssertionConsumerServiceURL(std::shared_ptr<SamlConfigurationPropertyItemsString> value);

    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<SamlConfigurationPropertyItemsString> getSpPrivateKeyAlias() const;
    void setSpPrivateKeyAlias(std::shared_ptr<SamlConfigurationPropertyItemsString> value);

    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<SamlConfigurationPropertyItemsString> getKeyStorePassword() const;
    void setKeyStorePassword(std::shared_ptr<SamlConfigurationPropertyItemsString> value);

    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<SamlConfigurationPropertyItemsString> getDefaultRedirectUrl() const;
    void setDefaultRedirectUrl(std::shared_ptr<SamlConfigurationPropertyItemsString> value);

    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<SamlConfigurationPropertyItemsString> getUserIDAttribute() const;
    void setUserIDAttribute(std::shared_ptr<SamlConfigurationPropertyItemsString> value);

    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<SamlConfigurationPropertyItemsBoolean> getUseEncryption() const;
    void setUseEncryption(std::shared_ptr<SamlConfigurationPropertyItemsBoolean> value);

    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<SamlConfigurationPropertyItemsBoolean> getCreateUser() const;
    void setCreateUser(std::shared_ptr<SamlConfigurationPropertyItemsBoolean> value);

    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<SamlConfigurationPropertyItemsBoolean> getAddGroupMemberships() const;
    void setAddGroupMemberships(std::shared_ptr<SamlConfigurationPropertyItemsBoolean> value);

    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<SamlConfigurationPropertyItemsString> getGroupMembershipAttribute() const;
    void setGroupMembershipAttribute(std::shared_ptr<SamlConfigurationPropertyItemsString> value);

    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<SamlConfigurationPropertyItemsArray> getDefaultGroups() const;
    void setDefaultGroups(std::shared_ptr<SamlConfigurationPropertyItemsArray> value);

    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<SamlConfigurationPropertyItemsString> getNameIdFormat() const;
    void setNameIdFormat(std::shared_ptr<SamlConfigurationPropertyItemsString> value);

    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<SamlConfigurationPropertyItemsArray> getSynchronizeAttributes() const;
    void setSynchronizeAttributes(std::shared_ptr<SamlConfigurationPropertyItemsArray> value);

    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<SamlConfigurationPropertyItemsBoolean> getHandleLogout() const;
    void setHandleLogout(std::shared_ptr<SamlConfigurationPropertyItemsBoolean> value);

    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<SamlConfigurationPropertyItemsString> getLogoutUrl() const;
    void setLogoutUrl(std::shared_ptr<SamlConfigurationPropertyItemsString> value);

    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<SamlConfigurationPropertyItemsLong> getClockTolerance() const;
    void setClockTolerance(std::shared_ptr<SamlConfigurationPropertyItemsLong> value);

    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<SamlConfigurationPropertyItemsString> getDigestMethod() const;
    void setDigestMethod(std::shared_ptr<SamlConfigurationPropertyItemsString> value);

    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<SamlConfigurationPropertyItemsString> getSignatureMethod() const;
    void setSignatureMethod(std::shared_ptr<SamlConfigurationPropertyItemsString> value);

    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<SamlConfigurationPropertyItemsString> getUserIntermediatePath() const;
    void setUserIntermediatePath(std::shared_ptr<SamlConfigurationPropertyItemsString> value);
protected:
    std::shared_ptr<SamlConfigurationPropertyItemsArray> m_Path;
    std::shared_ptr<SamlConfigurationPropertyItemsLong> m_Service_ranking;
    std::shared_ptr<SamlConfigurationPropertyItemsString> m_IdpUrl;
    std::shared_ptr<SamlConfigurationPropertyItemsString> m_IdpCertAlias;
    std::shared_ptr<SamlConfigurationPropertyItemsBoolean> m_IdpHttpRedirect;
    std::shared_ptr<SamlConfigurationPropertyItemsString> m_ServiceProviderEntityId;
    std::shared_ptr<SamlConfigurationPropertyItemsString> m_AssertionConsumerServiceURL;
    std::shared_ptr<SamlConfigurationPropertyItemsString> m_SpPrivateKeyAlias;
    std::shared_ptr<SamlConfigurationPropertyItemsString> m_KeyStorePassword;
    std::shared_ptr<SamlConfigurationPropertyItemsString> m_DefaultRedirectUrl;
    std::shared_ptr<SamlConfigurationPropertyItemsString> m_UserIDAttribute;
    std::shared_ptr<SamlConfigurationPropertyItemsBoolean> m_UseEncryption;
    std::shared_ptr<SamlConfigurationPropertyItemsBoolean> m_CreateUser;
    std::shared_ptr<SamlConfigurationPropertyItemsBoolean> m_AddGroupMemberships;
    std::shared_ptr<SamlConfigurationPropertyItemsString> m_GroupMembershipAttribute;
    std::shared_ptr<SamlConfigurationPropertyItemsArray> m_DefaultGroups;
    std::shared_ptr<SamlConfigurationPropertyItemsString> m_NameIdFormat;
    std::shared_ptr<SamlConfigurationPropertyItemsArray> m_SynchronizeAttributes;
    std::shared_ptr<SamlConfigurationPropertyItemsBoolean> m_HandleLogout;
    std::shared_ptr<SamlConfigurationPropertyItemsString> m_LogoutUrl;
    std::shared_ptr<SamlConfigurationPropertyItemsLong> m_ClockTolerance;
    std::shared_ptr<SamlConfigurationPropertyItemsString> m_DigestMethod;
    std::shared_ptr<SamlConfigurationPropertyItemsString> m_SignatureMethod;
    std::shared_ptr<SamlConfigurationPropertyItemsString> m_UserIntermediatePath;
};

}
}
}
}

#endif /* SamlConfigurationProperties_H_ */
