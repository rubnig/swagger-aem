/**
 * Adobe Experience Manager (AEM) API
 * Swagger AEM is an OpenAPI specification for Adobe Experience Manager (AEM) API
 *
 * The version of the OpenAPI document: 3.5.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 5.2.1.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * CrxApi.h
 *
 * 
 */

#ifndef CrxApi_H_
#define CrxApi_H_


#include <memory>
#include <utility>

#include <corvusoft/restbed/session.hpp>
#include <corvusoft/restbed/resource.hpp>
#include <corvusoft/restbed/service.hpp>

#include "InstallStatus.h"
#include <string>

namespace org {
namespace openapitools {
namespace server {
namespace api {

using namespace org::openapitools::server::model;

/// <summary>
/// 
/// </summary>
/// <remarks>
/// 
/// </remarks>
class  CrxApiCrxServerCrx.defaultJcr:root.1.jsonResource: public restbed::Resource
{
public:
	CrxApiCrxServerCrx.defaultJcr:root.1.jsonResource();
    virtual ~CrxApiCrxServerCrx.defaultJcr:root.1.jsonResource();
    void GET_method_handler(const std::shared_ptr<restbed::Session> session);

	void set_handler_GET(
		std::function<std::pair<int, std::string>(
			
		)> handler
	);


private:
	std::function<std::pair<int, std::string>(
		
	)> handler_GET_;


};

/// <summary>
/// 
/// </summary>
/// <remarks>
/// 
/// </remarks>
class  CrxApiCrxPackmgrInstallstatus.jspResource: public restbed::Resource
{
public:
	CrxApiCrxPackmgrInstallstatus.jspResource();
    virtual ~CrxApiCrxPackmgrInstallstatus.jspResource();
    void GET_method_handler(const std::shared_ptr<restbed::Session> session);

	void set_handler_GET(
		std::function<std::pair<int, std::string>(
			
		)> handler
	);


private:
	std::function<std::pair<int, std::string>(
		
	)> handler_GET_;


};

/// <summary>
/// 
/// </summary>
/// <remarks>
/// 
/// </remarks>
class  CrxApiCrxPackmgrServiceScript.htmlResource: public restbed::Resource
{
public:
	CrxApiCrxPackmgrServiceScript.htmlResource();
    virtual ~CrxApiCrxPackmgrServiceScript.htmlResource();
    void GET_method_handler(const std::shared_ptr<restbed::Session> session);

	void set_handler_GET(
		std::function<std::pair<int, std::string>(
			
		)> handler
	);


private:
	std::function<std::pair<int, std::string>(
		
	)> handler_GET_;


};

/// <summary>
/// 
/// </summary>
/// <remarks>
/// 
/// </remarks>
class  CrxApiCrxPackmgrService.jspResource: public restbed::Resource
{
public:
	CrxApiCrxPackmgrService.jspResource();
    virtual ~CrxApiCrxPackmgrService.jspResource();
    void POST_method_handler(const std::shared_ptr<restbed::Session> session);

	void set_handler_POST(
		std::function<std::pair<int, std::string>(
			std::string const &
		)> handler
	);


private:
	std::function<std::pair<int, std::string>(
		std::string const &
	)> handler_POST_;


	std::string cmd{};
};

/// <summary>
/// 
/// </summary>
/// <remarks>
/// 
/// </remarks>
class  CrxApiCrxPackmgrService.jsonPathResource: public restbed::Resource
{
public:
	CrxApiCrxPackmgrService.jsonPathResource();
    virtual ~CrxApiCrxPackmgrService.jsonPathResource();
    void POST_method_handler(const std::shared_ptr<restbed::Session> session);

	void set_handler_POST(
		std::function<std::pair<int, std::string>(
			std::string const &, std::string const &, std::string const &, std::string const &, std::string const &, std::string const &, bool const &, bool const &, std::string const &
		)> handler
	);


private:
	std::function<std::pair<int, std::string>(
		std::string const &, std::string const &, std::string const &, std::string const &, std::string const &, std::string const &, bool const &, bool const &, std::string const &
	)> handler_POST_;


	std::string path{};
	std::string cmd{};
	std::string groupName{};
	std::string packageName{};
	std::string packageVersion{};
	std::string charset{};
	bool force{};
	bool recursive{};
	std::string package{};
};

/// <summary>
/// 
/// </summary>
/// <remarks>
/// 
/// </remarks>
class  CrxApiCrxPackmgrUpdate.jspResource: public restbed::Resource
{
public:
	CrxApiCrxPackmgrUpdate.jspResource();
    virtual ~CrxApiCrxPackmgrUpdate.jspResource();
    void POST_method_handler(const std::shared_ptr<restbed::Session> session);

	void set_handler_POST(
		std::function<std::pair<int, std::string>(
			std::string const &, std::string const &, std::string const &, std::string const &, std::string const &, std::string const &
		)> handler
	);


private:
	std::function<std::pair<int, std::string>(
		std::string const &, std::string const &, std::string const &, std::string const &, std::string const &, std::string const &
	)> handler_POST_;


	std::string groupName{};
	std::string packageName{};
	std::string version{};
	std::string path{};
	std::string filter{};
	std::string charset{};
};

/// <summary>
/// 
/// </summary>
/// <remarks>
/// 
/// </remarks>
class  CrxApiCrxExplorerUiSetpassword.jspResource: public restbed::Resource
{
public:
	CrxApiCrxExplorerUiSetpassword.jspResource();
    virtual ~CrxApiCrxExplorerUiSetpassword.jspResource();
    void POST_method_handler(const std::shared_ptr<restbed::Session> session);

	void set_handler_POST(
		std::function<std::pair<int, std::string>(
			std::string const &, std::string const &, std::string const &
		)> handler
	);


private:
	std::function<std::pair<int, std::string>(
		std::string const &, std::string const &, std::string const &
	)> handler_POST_;


	std::string old{};
	std::string plain{};
	std::string verify{};
};


//
// The restbed service to actually implement the REST server
//
class  CrxApi: public restbed::Service
{
public:
	CrxApi();
	~CrxApi();
	void startService(int const& port);
	void stopService();
	
protected:
	std::shared_ptr<CrxApiCrxServerCrx.defaultJcr:root.1.jsonResource> m_spCrxApiCrxServerCrx.defaultJcr:root.1.jsonResource;
	std::shared_ptr<CrxApiCrxPackmgrInstallstatus.jspResource> m_spCrxApiCrxPackmgrInstallstatus.jspResource;
	std::shared_ptr<CrxApiCrxPackmgrServiceScript.htmlResource> m_spCrxApiCrxPackmgrServiceScript.htmlResource;
	std::shared_ptr<CrxApiCrxPackmgrService.jspResource> m_spCrxApiCrxPackmgrService.jspResource;
	std::shared_ptr<CrxApiCrxPackmgrService.jsonPathResource> m_spCrxApiCrxPackmgrService.jsonPathResource;
	std::shared_ptr<CrxApiCrxPackmgrUpdate.jspResource> m_spCrxApiCrxPackmgrUpdate.jspResource;
	std::shared_ptr<CrxApiCrxExplorerUiSetpassword.jspResource> m_spCrxApiCrxExplorerUiSetpassword.jspResource;
};


}
}
}
}

#endif /* CrxApi_H_ */

