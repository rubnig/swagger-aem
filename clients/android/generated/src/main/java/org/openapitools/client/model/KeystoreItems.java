/**
 * Adobe Experience Manager (AEM) API
 * Swagger AEM is an OpenAPI specification for Adobe Experience Manager (AEM) API
 *
 * The version of the OpenAPI document: 3.5.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.client.model;

import java.util.*;
import org.openapitools.client.model.KeystoreChainItems;
import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

@ApiModel(description = "")
public class KeystoreItems {
  
  @SerializedName("alias")
  private String alias = null;
  @SerializedName("entryType")
  private String entryType = null;
  @SerializedName("algorithm")
  private String algorithm = null;
  @SerializedName("format")
  private String format = null;
  @SerializedName("chain")
  private List<KeystoreChainItems> chain = null;

  /**
   * Keystore alias name
   **/
  @ApiModelProperty(value = "Keystore alias name")
  public String getAlias() {
    return alias;
  }
  public void setAlias(String alias) {
    this.alias = alias;
  }

  /**
   * e.g. \"privateKey\"
   **/
  @ApiModelProperty(value = "e.g. \"privateKey\"")
  public String getEntryType() {
    return entryType;
  }
  public void setEntryType(String entryType) {
    this.entryType = entryType;
  }

  /**
   * e.g. \"RSA\"
   **/
  @ApiModelProperty(value = "e.g. \"RSA\"")
  public String getAlgorithm() {
    return algorithm;
  }
  public void setAlgorithm(String algorithm) {
    this.algorithm = algorithm;
  }

  /**
   * e.g. \"PKCS#8\"
   **/
  @ApiModelProperty(value = "e.g. \"PKCS#8\"")
  public String getFormat() {
    return format;
  }
  public void setFormat(String format) {
    this.format = format;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public List<KeystoreChainItems> getChain() {
    return chain;
  }
  public void setChain(List<KeystoreChainItems> chain) {
    this.chain = chain;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    KeystoreItems keystoreItems = (KeystoreItems) o;
    return (this.alias == null ? keystoreItems.alias == null : this.alias.equals(keystoreItems.alias)) &&
        (this.entryType == null ? keystoreItems.entryType == null : this.entryType.equals(keystoreItems.entryType)) &&
        (this.algorithm == null ? keystoreItems.algorithm == null : this.algorithm.equals(keystoreItems.algorithm)) &&
        (this.format == null ? keystoreItems.format == null : this.format.equals(keystoreItems.format)) &&
        (this.chain == null ? keystoreItems.chain == null : this.chain.equals(keystoreItems.chain));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.alias == null ? 0: this.alias.hashCode());
    result = 31 * result + (this.entryType == null ? 0: this.entryType.hashCode());
    result = 31 * result + (this.algorithm == null ? 0: this.algorithm.hashCode());
    result = 31 * result + (this.format == null ? 0: this.format.hashCode());
    result = 31 * result + (this.chain == null ? 0: this.chain.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class KeystoreItems {\n");
    
    sb.append("  alias: ").append(alias).append("\n");
    sb.append("  entryType: ").append(entryType).append("\n");
    sb.append("  algorithm: ").append(algorithm).append("\n");
    sb.append("  format: ").append(format).append("\n");
    sb.append("  chain: ").append(chain).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
