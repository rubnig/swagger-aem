# NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
# https://openapi-generator.tech
# Do not edit the class manually.

defmodule AdobeExperienceManager(AEM)API.Api.Cq do
  @moduledoc """
  API calls for all endpoints tagged `Cq`.
  """

  alias AdobeExperienceManager(AEM)API.Connection
  import AdobeExperienceManager(AEM)API.RequestBuilder


  @doc """

  ## Parameters

  - connection (AdobeExperienceManager(AEM)API.Connection): Connection to server
  - opts (KeywordList): [optional] Optional parameters
  ## Returns

  {:ok, String.t} on success
  {:error, Tesla.Env.t} on failure
  """
  @spec get_login_page(Tesla.Env.client, keyword()) :: {:ok, String.t} | {:error, Tesla.Env.t}
  def get_login_page(connection, _opts \\ []) do
    %{}
    |> method(:get)
    |> url("/libs/granite/core/content/login.html")
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> evaluate_response([
      { :default, false}
    ])
  end

  @doc """

  ## Parameters

  - connection (AdobeExperienceManager(AEM)API.Connection): Connection to server
  - authorizable_id (String.t): 
  - changelog (String.t): 
  - opts (KeywordList): [optional] Optional parameters
  ## Returns

  {:ok, nil} on success
  {:error, Tesla.Env.t} on failure
  """
  @spec post_cq_actions(Tesla.Env.client, String.t, String.t, keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def post_cq_actions(connection, authorizable_id, changelog, _opts \\ []) do
    %{}
    |> method(:post)
    |> url("/.cqactions.html")
    |> add_param(:query, :"authorizableId", authorizable_id)
    |> add_param(:query, :"changelog", changelog)
    |> ensure_body()
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> evaluate_response([
      { :default, false}
    ])
  end
end
