=begin
#Adobe Experience Manager (AEM) API

#Swagger AEM is an OpenAPI specification for Adobe Experience Manager (AEM) API

The version of the OpenAPI document: 3.5.0-pre.0
Contact: opensource@shinesolutions.com
Generated by: https://openapi-generator.tech
OpenAPI Generator version: 5.2.1

=end

require 'spec_helper'
require 'json'

# Unit tests for SwaggerAemClient::SlingApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'SlingApi' do
  before do
    # run before each test
    @api_instance = SwaggerAemClient::SlingApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of SlingApi' do
    it 'should create an instance of SlingApi' do
      expect(@api_instance).to be_instance_of(SwaggerAemClient::SlingApi)
    end
  end

  # unit tests for delete_agent
  # @param runmode 
  # @param name 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_agent test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_node
  # @param path 
  # @param name 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_node test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_agent
  # @param runmode 
  # @param name 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'get_agent test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_agents
  # @param runmode 
  # @param [Hash] opts the optional parameters
  # @return [String]
  describe 'get_agents test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_authorizable_keystore
  # @param intermediate_path 
  # @param authorizable_id 
  # @param [Hash] opts the optional parameters
  # @return [KeystoreInfo]
  describe 'get_authorizable_keystore test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_keystore
  # @param intermediate_path 
  # @param authorizable_id 
  # @param [Hash] opts the optional parameters
  # @return [File]
  describe 'get_keystore test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_node
  # @param path 
  # @param name 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'get_node test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_package
  # @param group 
  # @param name 
  # @param version 
  # @param [Hash] opts the optional parameters
  # @return [File]
  describe 'get_package test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_package_filter
  # @param group 
  # @param name 
  # @param version 
  # @param [Hash] opts the optional parameters
  # @return [String]
  describe 'get_package_filter test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_query
  # @param path 
  # @param p_limit 
  # @param _1_property 
  # @param _1_property_value 
  # @param [Hash] opts the optional parameters
  # @return [String]
  describe 'get_query test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_truststore
  # @param [Hash] opts the optional parameters
  # @return [File]
  describe 'get_truststore test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_truststore_info
  # @param [Hash] opts the optional parameters
  # @return [TruststoreInfo]
  describe 'get_truststore_info test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for post_agent
  # @param runmode 
  # @param name 
  # @param [Hash] opts the optional parameters
  # @option opts [Boolean] :jcrcontent_cqdistribute 
  # @option opts [String] :jcrcontent_cqdistribute_type_hint 
  # @option opts [String] :jcrcontent_cqname 
  # @option opts [String] :jcrcontent_cqtemplate 
  # @option opts [Boolean] :jcrcontent_enabled 
  # @option opts [String] :jcrcontent_jcrdescription 
  # @option opts [String] :jcrcontent_jcrlast_modified 
  # @option opts [String] :jcrcontent_jcrlast_modified_by 
  # @option opts [String] :jcrcontent_jcrmixin_types 
  # @option opts [String] :jcrcontent_jcrtitle 
  # @option opts [String] :jcrcontent_log_level 
  # @option opts [Boolean] :jcrcontent_no_status_update 
  # @option opts [Boolean] :jcrcontent_no_versioning 
  # @option opts [Float] :jcrcontent_protocol_connect_timeout 
  # @option opts [Boolean] :jcrcontent_protocol_http_connection_closed 
  # @option opts [String] :jcrcontent_protocol_http_expired 
  # @option opts [Array<String>] :jcrcontent_protocol_http_headers 
  # @option opts [String] :jcrcontent_protocol_http_headers_type_hint 
  # @option opts [String] :jcrcontent_protocol_http_method 
  # @option opts [Boolean] :jcrcontent_protocol_https_relaxed 
  # @option opts [String] :jcrcontent_protocol_interface 
  # @option opts [Float] :jcrcontent_protocol_socket_timeout 
  # @option opts [String] :jcrcontent_protocol_version 
  # @option opts [String] :jcrcontent_proxy_ntlm_domain 
  # @option opts [String] :jcrcontent_proxy_ntlm_host 
  # @option opts [String] :jcrcontent_proxy_host 
  # @option opts [String] :jcrcontent_proxy_password 
  # @option opts [Float] :jcrcontent_proxy_port 
  # @option opts [String] :jcrcontent_proxy_user 
  # @option opts [Float] :jcrcontent_queue_batch_max_size 
  # @option opts [String] :jcrcontent_queue_batch_mode 
  # @option opts [Float] :jcrcontent_queue_batch_wait_time 
  # @option opts [String] :jcrcontent_retry_delay 
  # @option opts [Boolean] :jcrcontent_reverse_replication 
  # @option opts [String] :jcrcontent_serialization_type 
  # @option opts [String] :jcrcontent_slingresource_type 
  # @option opts [String] :jcrcontent_ssl 
  # @option opts [String] :jcrcontent_transport_ntlm_domain 
  # @option opts [String] :jcrcontent_transport_ntlm_host 
  # @option opts [String] :jcrcontent_transport_password 
  # @option opts [String] :jcrcontent_transport_uri 
  # @option opts [String] :jcrcontent_transport_user 
  # @option opts [Boolean] :jcrcontent_trigger_distribute 
  # @option opts [Boolean] :jcrcontent_trigger_modified 
  # @option opts [Boolean] :jcrcontent_trigger_on_off_time 
  # @option opts [Boolean] :jcrcontent_trigger_receive 
  # @option opts [Boolean] :jcrcontent_trigger_specific 
  # @option opts [String] :jcrcontent_user_id 
  # @option opts [String] :jcrprimary_type 
  # @option opts [String] :operation 
  # @return [nil]
  describe 'post_agent test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for post_authorizable_keystore
  # @param intermediate_path 
  # @param authorizable_id 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :operation 
  # @option opts [String] :current_password 
  # @option opts [String] :new_password 
  # @option opts [String] :re_password 
  # @option opts [String] :key_password 
  # @option opts [String] :key_store_pass 
  # @option opts [String] :_alias 
  # @option opts [String] :new_alias 
  # @option opts [String] :remove_alias 
  # @option opts [File] :cert_chain 
  # @option opts [File] :pk 
  # @option opts [File] :key_store 
  # @return [KeystoreInfo]
  describe 'post_authorizable_keystore test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for post_authorizables
  # @param authorizable_id 
  # @param intermediate_path 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :create_user 
  # @option opts [String] :create_group 
  # @option opts [String] :reppassword 
  # @option opts [String] :profile_given_name 
  # @return [String]
  describe 'post_authorizables test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for post_config_adobe_granite_saml_authentication_handler
  # @param [Hash] opts the optional parameters
  # @option opts [String] :key_store_password 
  # @option opts [String] :key_store_password_type_hint 
  # @option opts [Integer] :service_ranking 
  # @option opts [String] :service_ranking_type_hint 
  # @option opts [Boolean] :idp_http_redirect 
  # @option opts [String] :idp_http_redirect_type_hint 
  # @option opts [Boolean] :create_user 
  # @option opts [String] :create_user_type_hint 
  # @option opts [String] :default_redirect_url 
  # @option opts [String] :default_redirect_url_type_hint 
  # @option opts [String] :user_id_attribute 
  # @option opts [String] :user_id_attribute_type_hint 
  # @option opts [Array<String>] :default_groups 
  # @option opts [String] :default_groups_type_hint 
  # @option opts [String] :idp_cert_alias 
  # @option opts [String] :idp_cert_alias_type_hint 
  # @option opts [Boolean] :add_group_memberships 
  # @option opts [String] :add_group_memberships_type_hint 
  # @option opts [Array<String>] :path 
  # @option opts [String] :path_type_hint 
  # @option opts [Array<String>] :synchronize_attributes 
  # @option opts [String] :synchronize_attributes_type_hint 
  # @option opts [Integer] :clock_tolerance 
  # @option opts [String] :clock_tolerance_type_hint 
  # @option opts [String] :group_membership_attribute 
  # @option opts [String] :group_membership_attribute_type_hint 
  # @option opts [String] :idp_url 
  # @option opts [String] :idp_url_type_hint 
  # @option opts [String] :logout_url 
  # @option opts [String] :logout_url_type_hint 
  # @option opts [String] :service_provider_entity_id 
  # @option opts [String] :service_provider_entity_id_type_hint 
  # @option opts [String] :assertion_consumer_service_url 
  # @option opts [String] :assertion_consumer_service_url_type_hint 
  # @option opts [Boolean] :handle_logout 
  # @option opts [String] :handle_logout_type_hint 
  # @option opts [String] :sp_private_key_alias 
  # @option opts [String] :sp_private_key_alias_type_hint 
  # @option opts [Boolean] :use_encryption 
  # @option opts [String] :use_encryption_type_hint 
  # @option opts [String] :name_id_format 
  # @option opts [String] :name_id_format_type_hint 
  # @option opts [String] :digest_method 
  # @option opts [String] :digest_method_type_hint 
  # @option opts [String] :signature_method 
  # @option opts [String] :signature_method_type_hint 
  # @option opts [String] :user_intermediate_path 
  # @option opts [String] :user_intermediate_path_type_hint 
  # @return [nil]
  describe 'post_config_adobe_granite_saml_authentication_handler test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for post_config_apache_felix_jetty_based_http_service
  # @param [Hash] opts the optional parameters
  # @option opts [Boolean] :org_apache_felix_https_nio 
  # @option opts [String] :org_apache_felix_https_nio_type_hint 
  # @option opts [String] :org_apache_felix_https_keystore 
  # @option opts [String] :org_apache_felix_https_keystore_type_hint 
  # @option opts [String] :org_apache_felix_https_keystore_password 
  # @option opts [String] :org_apache_felix_https_keystore_password_type_hint 
  # @option opts [String] :org_apache_felix_https_keystore_key 
  # @option opts [String] :org_apache_felix_https_keystore_key_type_hint 
  # @option opts [String] :org_apache_felix_https_keystore_key_password 
  # @option opts [String] :org_apache_felix_https_keystore_key_password_type_hint 
  # @option opts [String] :org_apache_felix_https_truststore 
  # @option opts [String] :org_apache_felix_https_truststore_type_hint 
  # @option opts [String] :org_apache_felix_https_truststore_password 
  # @option opts [String] :org_apache_felix_https_truststore_password_type_hint 
  # @option opts [String] :org_apache_felix_https_clientcertificate 
  # @option opts [String] :org_apache_felix_https_clientcertificate_type_hint 
  # @option opts [Boolean] :org_apache_felix_https_enable 
  # @option opts [String] :org_apache_felix_https_enable_type_hint 
  # @option opts [String] :org_osgi_service_http_port_secure 
  # @option opts [String] :org_osgi_service_http_port_secure_type_hint 
  # @return [nil]
  describe 'post_config_apache_felix_jetty_based_http_service test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for post_config_apache_http_components_proxy_configuration
  # @param [Hash] opts the optional parameters
  # @option opts [String] :proxy_host 
  # @option opts [String] :proxy_host_type_hint 
  # @option opts [Integer] :proxy_port 
  # @option opts [String] :proxy_port_type_hint 
  # @option opts [Array<String>] :proxy_exceptions 
  # @option opts [String] :proxy_exceptions_type_hint 
  # @option opts [Boolean] :proxy_enabled 
  # @option opts [String] :proxy_enabled_type_hint 
  # @option opts [String] :proxy_user 
  # @option opts [String] :proxy_user_type_hint 
  # @option opts [String] :proxy_password 
  # @option opts [String] :proxy_password_type_hint 
  # @return [nil]
  describe 'post_config_apache_http_components_proxy_configuration test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for post_config_apache_sling_dav_ex_servlet
  # @param [Hash] opts the optional parameters
  # @option opts [String] :_alias 
  # @option opts [String] :alias_type_hint 
  # @option opts [Boolean] :dav_create_absolute_uri 
  # @option opts [String] :dav_create_absolute_uri_type_hint 
  # @return [nil]
  describe 'post_config_apache_sling_dav_ex_servlet test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for post_config_apache_sling_get_servlet
  # @param [Hash] opts the optional parameters
  # @option opts [String] :json_maximumresults 
  # @option opts [String] :json_maximumresults_type_hint 
  # @option opts [Boolean] :enable_html 
  # @option opts [String] :enable_html_type_hint 
  # @option opts [Boolean] :enable_txt 
  # @option opts [String] :enable_txt_type_hint 
  # @option opts [Boolean] :enable_xml 
  # @option opts [String] :enable_xml_type_hint 
  # @return [nil]
  describe 'post_config_apache_sling_get_servlet test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for post_config_apache_sling_referrer_filter
  # @param [Hash] opts the optional parameters
  # @option opts [Boolean] :allow_empty 
  # @option opts [String] :allow_empty_type_hint 
  # @option opts [String] :allow_hosts 
  # @option opts [String] :allow_hosts_type_hint 
  # @option opts [String] :allow_hosts_regexp 
  # @option opts [String] :allow_hosts_regexp_type_hint 
  # @option opts [String] :filter_methods 
  # @option opts [String] :filter_methods_type_hint 
  # @return [nil]
  describe 'post_config_apache_sling_referrer_filter test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for post_config_property
  # @param config_node_name 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'post_config_property test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for post_node
  # @param path 
  # @param name 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :operation 
  # @option opts [String] :delete_authorizable 
  # @option opts [File] :file 
  # @return [nil]
  describe 'post_node test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for post_node_rw
  # @param path 
  # @param name 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :add_members 
  # @return [nil]
  describe 'post_node_rw test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for post_path
  # @param path 
  # @param jcrprimary_type 
  # @param name 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'post_path test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for post_query
  # @param path 
  # @param p_limit 
  # @param _1_property 
  # @param _1_property_value 
  # @param [Hash] opts the optional parameters
  # @return [String]
  describe 'post_query test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for post_tree_activation
  # @param ignoredeactivated 
  # @param onlymodified 
  # @param path 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'post_tree_activation test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for post_truststore
  # @param [Hash] opts the optional parameters
  # @option opts [String] :operation 
  # @option opts [String] :new_password 
  # @option opts [String] :re_password 
  # @option opts [String] :key_store_type 
  # @option opts [String] :remove_alias 
  # @option opts [File] :certificate 
  # @return [String]
  describe 'post_truststore test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for post_truststore_pkcs12
  # @param [Hash] opts the optional parameters
  # @option opts [File] :truststore_p12 
  # @return [String]
  describe 'post_truststore_pkcs12 test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
