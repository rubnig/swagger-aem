/**
 * Adobe Experience Manager (AEM) API
 * Swagger AEM is an OpenAPI specification for Adobe Experience Manager (AEM) API
 *
 * The version of the OpenAPI document: 3.5.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';
import { SamlConfigurationPropertyItemsArray } from './samlConfigurationPropertyItemsArray';
import { SamlConfigurationPropertyItemsBoolean } from './samlConfigurationPropertyItemsBoolean';
import { SamlConfigurationPropertyItemsLong } from './samlConfigurationPropertyItemsLong';
import { SamlConfigurationPropertyItemsString } from './samlConfigurationPropertyItemsString';

export class SamlConfigurationProperties {
    'path'?: SamlConfigurationPropertyItemsArray;
    'serviceRanking'?: SamlConfigurationPropertyItemsLong;
    'idpUrl'?: SamlConfigurationPropertyItemsString;
    'idpCertAlias'?: SamlConfigurationPropertyItemsString;
    'idpHttpRedirect'?: SamlConfigurationPropertyItemsBoolean;
    'serviceProviderEntityId'?: SamlConfigurationPropertyItemsString;
    'assertionConsumerServiceURL'?: SamlConfigurationPropertyItemsString;
    'spPrivateKeyAlias'?: SamlConfigurationPropertyItemsString;
    'keyStorePassword'?: SamlConfigurationPropertyItemsString;
    'defaultRedirectUrl'?: SamlConfigurationPropertyItemsString;
    'userIDAttribute'?: SamlConfigurationPropertyItemsString;
    'useEncryption'?: SamlConfigurationPropertyItemsBoolean;
    'createUser'?: SamlConfigurationPropertyItemsBoolean;
    'addGroupMemberships'?: SamlConfigurationPropertyItemsBoolean;
    'groupMembershipAttribute'?: SamlConfigurationPropertyItemsString;
    'defaultGroups'?: SamlConfigurationPropertyItemsArray;
    'nameIdFormat'?: SamlConfigurationPropertyItemsString;
    'synchronizeAttributes'?: SamlConfigurationPropertyItemsArray;
    'handleLogout'?: SamlConfigurationPropertyItemsBoolean;
    'logoutUrl'?: SamlConfigurationPropertyItemsString;
    'clockTolerance'?: SamlConfigurationPropertyItemsLong;
    'digestMethod'?: SamlConfigurationPropertyItemsString;
    'signatureMethod'?: SamlConfigurationPropertyItemsString;
    'userIntermediatePath'?: SamlConfigurationPropertyItemsString;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "path",
            "baseName": "path",
            "type": "SamlConfigurationPropertyItemsArray"
        },
        {
            "name": "serviceRanking",
            "baseName": "service.ranking",
            "type": "SamlConfigurationPropertyItemsLong"
        },
        {
            "name": "idpUrl",
            "baseName": "idpUrl",
            "type": "SamlConfigurationPropertyItemsString"
        },
        {
            "name": "idpCertAlias",
            "baseName": "idpCertAlias",
            "type": "SamlConfigurationPropertyItemsString"
        },
        {
            "name": "idpHttpRedirect",
            "baseName": "idpHttpRedirect",
            "type": "SamlConfigurationPropertyItemsBoolean"
        },
        {
            "name": "serviceProviderEntityId",
            "baseName": "serviceProviderEntityId",
            "type": "SamlConfigurationPropertyItemsString"
        },
        {
            "name": "assertionConsumerServiceURL",
            "baseName": "assertionConsumerServiceURL",
            "type": "SamlConfigurationPropertyItemsString"
        },
        {
            "name": "spPrivateKeyAlias",
            "baseName": "spPrivateKeyAlias",
            "type": "SamlConfigurationPropertyItemsString"
        },
        {
            "name": "keyStorePassword",
            "baseName": "keyStorePassword",
            "type": "SamlConfigurationPropertyItemsString"
        },
        {
            "name": "defaultRedirectUrl",
            "baseName": "defaultRedirectUrl",
            "type": "SamlConfigurationPropertyItemsString"
        },
        {
            "name": "userIDAttribute",
            "baseName": "userIDAttribute",
            "type": "SamlConfigurationPropertyItemsString"
        },
        {
            "name": "useEncryption",
            "baseName": "useEncryption",
            "type": "SamlConfigurationPropertyItemsBoolean"
        },
        {
            "name": "createUser",
            "baseName": "createUser",
            "type": "SamlConfigurationPropertyItemsBoolean"
        },
        {
            "name": "addGroupMemberships",
            "baseName": "addGroupMemberships",
            "type": "SamlConfigurationPropertyItemsBoolean"
        },
        {
            "name": "groupMembershipAttribute",
            "baseName": "groupMembershipAttribute",
            "type": "SamlConfigurationPropertyItemsString"
        },
        {
            "name": "defaultGroups",
            "baseName": "defaultGroups",
            "type": "SamlConfigurationPropertyItemsArray"
        },
        {
            "name": "nameIdFormat",
            "baseName": "nameIdFormat",
            "type": "SamlConfigurationPropertyItemsString"
        },
        {
            "name": "synchronizeAttributes",
            "baseName": "synchronizeAttributes",
            "type": "SamlConfigurationPropertyItemsArray"
        },
        {
            "name": "handleLogout",
            "baseName": "handleLogout",
            "type": "SamlConfigurationPropertyItemsBoolean"
        },
        {
            "name": "logoutUrl",
            "baseName": "logoutUrl",
            "type": "SamlConfigurationPropertyItemsString"
        },
        {
            "name": "clockTolerance",
            "baseName": "clockTolerance",
            "type": "SamlConfigurationPropertyItemsLong"
        },
        {
            "name": "digestMethod",
            "baseName": "digestMethod",
            "type": "SamlConfigurationPropertyItemsString"
        },
        {
            "name": "signatureMethod",
            "baseName": "signatureMethod",
            "type": "SamlConfigurationPropertyItemsString"
        },
        {
            "name": "userIntermediatePath",
            "baseName": "userIntermediatePath",
            "type": "SamlConfigurationPropertyItemsString"
        }    ];

    static getAttributeTypeMap() {
        return SamlConfigurationProperties.attributeTypeMap;
    }
}

