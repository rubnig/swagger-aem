<?php
/**
 * KeystoreItems
 *
 * PHP version 7.1.3
 *
 * @category Class
 * @package  OpenAPI\Server\Model
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */

/**
 * Adobe Experience Manager (AEM) API
 *
 * Swagger AEM is an OpenAPI specification for Adobe Experience Manager (AEM) API
 *
 * The version of the OpenAPI document: 3.5.0-pre.0
 * Contact: opensource@shinesolutions.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 *
 */

/**
 * NOTE: This class is auto generated by the openapi generator program.
 * https://github.com/openapitools/openapi-generator
 * Do not edit the class manually.
 */

namespace OpenAPI\Server\Model;

use Symfony\Component\Validator\Constraints as Assert;
use JMS\Serializer\Annotation\Type;
use JMS\Serializer\Annotation\SerializedName;

/**
 * Class representing the KeystoreItems model.
 *
 * @package OpenAPI\Server\Model
 * @author  OpenAPI Generator team
 */
class KeystoreItems 
{
        /**
     * Keystore alias name
     *
     * @var string|null
     * @SerializedName("alias")
     * @Assert\Type("string")
     * @Type("string")
     */
    protected $alias;

    /**
     * e.g. \&quot;privateKey\&quot;
     *
     * @var string|null
     * @SerializedName("entryType")
     * @Assert\Type("string")
     * @Type("string")
     */
    protected $entryType;

    /**
     * e.g. \&quot;RSA\&quot;
     *
     * @var string|null
     * @SerializedName("algorithm")
     * @Assert\Type("string")
     * @Type("string")
     */
    protected $algorithm;

    /**
     * e.g. \&quot;PKCS#8\&quot;
     *
     * @var string|null
     * @SerializedName("format")
     * @Assert\Type("string")
     * @Type("string")
     */
    protected $format;

    /**
     * @var OpenAPI\Server\Model\KeystoreChainItems[]|null
     * @SerializedName("chain")
     * @Assert\All({
     *   @Assert\Type("OpenAPI\Server\Model\KeystoreChainItems")
     * })
     * @Type("array<OpenAPI\Server\Model\KeystoreChainItems>")
     */
    protected $chain;

    /**
     * Constructor
     * @param mixed[] $data Associated array of property values initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->alias = isset($data['alias']) ? $data['alias'] : null;
        $this->entryType = isset($data['entryType']) ? $data['entryType'] : null;
        $this->algorithm = isset($data['algorithm']) ? $data['algorithm'] : null;
        $this->format = isset($data['format']) ? $data['format'] : null;
        $this->chain = isset($data['chain']) ? $data['chain'] : null;
    }

    /**
     * Gets alias.
     *
     * @return string|null
     */
    public function getAlias()
    {
        return $this->alias;
    }

    /**
     * Sets alias.
     *
     * @param string|null $alias  Keystore alias name
     *
     * @return $this
     */
    public function setAlias($alias = null)
    {
        $this->alias = $alias;

        return $this;
    }

    /**
     * Gets entryType.
     *
     * @return string|null
     */
    public function getEntryType()
    {
        return $this->entryType;
    }

    /**
     * Sets entryType.
     *
     * @param string|null $entryType  e.g. \"privateKey\"
     *
     * @return $this
     */
    public function setEntryType($entryType = null)
    {
        $this->entryType = $entryType;

        return $this;
    }

    /**
     * Gets algorithm.
     *
     * @return string|null
     */
    public function getAlgorithm()
    {
        return $this->algorithm;
    }

    /**
     * Sets algorithm.
     *
     * @param string|null $algorithm  e.g. \"RSA\"
     *
     * @return $this
     */
    public function setAlgorithm($algorithm = null)
    {
        $this->algorithm = $algorithm;

        return $this;
    }

    /**
     * Gets format.
     *
     * @return string|null
     */
    public function getFormat()
    {
        return $this->format;
    }

    /**
     * Sets format.
     *
     * @param string|null $format  e.g. \"PKCS#8\"
     *
     * @return $this
     */
    public function setFormat($format = null)
    {
        $this->format = $format;

        return $this;
    }

    /**
     * Gets chain.
     *
     * @return OpenAPI\Server\Model\KeystoreChainItems[]|null
     */
    public function getChain(): ?array
    {
        return $this->chain;
    }

    /**
     * Sets chain.
     *
     * @param OpenAPI\Server\Model\KeystoreChainItems[]|null $chain
     *
     * @return $this
     */
    public function setChain(array $chain = null)
    {
        $this->chain = $chain;

        return $this;
    }
}


