#
# Adobe Experience Manager (AEM) API
# Swagger AEM is an OpenAPI specification for Adobe Experience Manager (AEM) API
# Version: 3.5.0-pre.0
# Contact: opensource@shinesolutions.com
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

Describe -tag 'PSOpenAPITools' -name 'CrxApi' {
    Context 'Get-CrxdeStatus' {
        It 'Test Get-CrxdeStatus' {
            #$TestResult = Get-CrxdeStatus
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-InstallStatus' {
        It 'Test Get-InstallStatus' {
            #$TestResult = Get-InstallStatus
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PackageManagerServlet' {
        It 'Test Get-PackageManagerServlet' {
            #$TestResult = Get-PackageManagerServlet
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Submit-PackageService' {
        It 'Test Submit-PackageService' {
            #$TestResult = Submit-PackageService -Cmd "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Submit-PackageServiceJson' {
        It 'Test Submit-PackageServiceJson' {
            #$TestResult = Submit-PackageServiceJson -Path "TEST_VALUE" -Cmd "TEST_VALUE" -GroupName "TEST_VALUE" -PackageName "TEST_VALUE" -PackageVersion "TEST_VALUE" -Charset "TEST_VALUE" -Force "TEST_VALUE" -Recursive "TEST_VALUE" -Package "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Submit-PackageUpdate' {
        It 'Test Submit-PackageUpdate' {
            #$TestResult = Submit-PackageUpdate -GroupName "TEST_VALUE" -PackageName "TEST_VALUE" -Version "TEST_VALUE" -Path "TEST_VALUE" -Filter "TEST_VALUE" -Charset "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Submit-SetPassword' {
        It 'Test Submit-SetPassword' {
            #$TestResult = Submit-SetPassword -Old "TEST_VALUE" -Plain "TEST_VALUE" -Verify "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

}
