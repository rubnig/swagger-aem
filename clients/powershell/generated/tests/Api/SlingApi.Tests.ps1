#
# Adobe Experience Manager (AEM) API
# Swagger AEM is an OpenAPI specification for Adobe Experience Manager (AEM) API
# Version: 3.5.0-pre.0
# Contact: opensource@shinesolutions.com
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

Describe -tag 'PSOpenAPITools' -name 'SlingApi' {
    Context 'Invoke-DeleteAgent' {
        It 'Test Invoke-DeleteAgent' {
            #$TestResult = Invoke-DeleteAgent -Runmode "TEST_VALUE" -Name "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-DeleteNode' {
        It 'Test Invoke-DeleteNode' {
            #$TestResult = Invoke-DeleteNode -Path "TEST_VALUE" -Name "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-Agent' {
        It 'Test Get-Agent' {
            #$TestResult = Get-Agent -Runmode "TEST_VALUE" -Name "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-Agents' {
        It 'Test Get-Agents' {
            #$TestResult = Get-Agents -Runmode "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-AuthorizableKeystore' {
        It 'Test Get-AuthorizableKeystore' {
            #$TestResult = Get-AuthorizableKeystore -IntermediatePath "TEST_VALUE" -AuthorizableId "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-Keystore' {
        It 'Test Get-Keystore' {
            #$TestResult = Get-Keystore -IntermediatePath "TEST_VALUE" -AuthorizableId "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-Node' {
        It 'Test Get-Node' {
            #$TestResult = Get-Node -Path "TEST_VALUE" -Name "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-Package' {
        It 'Test Get-Package' {
            #$TestResult = Get-Package -Group "TEST_VALUE" -Name "TEST_VALUE" -Version "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-PackageFilter' {
        It 'Test Get-PackageFilter' {
            #$TestResult = Get-PackageFilter -Group "TEST_VALUE" -Name "TEST_VALUE" -Version "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-Query' {
        It 'Test Get-Query' {
            #$TestResult = Get-Query -Path "TEST_VALUE" -PLimit "TEST_VALUE" -Var1Property "TEST_VALUE" -Var1PropertyValue "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-Truststore' {
        It 'Test Get-Truststore' {
            #$TestResult = Get-Truststore
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-TruststoreInfo' {
        It 'Test Get-TruststoreInfo' {
            #$TestResult = Get-TruststoreInfo
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Submit-Agent' {
        It 'Test Submit-Agent' {
            #$TestResult = Submit-Agent -Runmode "TEST_VALUE" -Name "TEST_VALUE" -JcrcontentCqdistribute "TEST_VALUE" -JcrcontentCqdistributeTypeHint "TEST_VALUE" -JcrcontentCqname "TEST_VALUE" -JcrcontentCqtemplate "TEST_VALUE" -JcrcontentEnabled "TEST_VALUE" -JcrcontentJcrdescription "TEST_VALUE" -JcrcontentJcrlastModified "TEST_VALUE" -JcrcontentJcrlastModifiedBy "TEST_VALUE" -JcrcontentJcrmixinTypes "TEST_VALUE" -JcrcontentJcrtitle "TEST_VALUE" -JcrcontentLogLevel "TEST_VALUE" -JcrcontentNoStatusUpdate "TEST_VALUE" -JcrcontentNoVersioning "TEST_VALUE" -JcrcontentProtocolConnectTimeout "TEST_VALUE" -JcrcontentProtocolHTTPConnectionClosed "TEST_VALUE" -JcrcontentProtocolHTTPExpired "TEST_VALUE" -JcrcontentProtocolHTTPHeaders "TEST_VALUE" -JcrcontentProtocolHTTPHeadersTypeHint "TEST_VALUE" -JcrcontentProtocolHTTPMethod "TEST_VALUE" -JcrcontentProtocolHTTPSRelaxed "TEST_VALUE" -JcrcontentProtocolInterface "TEST_VALUE" -JcrcontentProtocolSocketTimeout "TEST_VALUE" -JcrcontentProtocolVersion "TEST_VALUE" -JcrcontentProxyNTLMDomain "TEST_VALUE" -JcrcontentProxyNTLMHost "TEST_VALUE" -JcrcontentProxyHost "TEST_VALUE" -JcrcontentProxyPassword "TEST_VALUE" -JcrcontentProxyPort "TEST_VALUE" -JcrcontentProxyUser "TEST_VALUE" -JcrcontentQueueBatchMaxSize "TEST_VALUE" -JcrcontentQueueBatchMode "TEST_VALUE" -JcrcontentQueueBatchWaitTime "TEST_VALUE" -JcrcontentRetryDelay "TEST_VALUE" -JcrcontentReverseReplication "TEST_VALUE" -JcrcontentSerializationType "TEST_VALUE" -JcrcontentSlingresourceType "TEST_VALUE" -JcrcontentSsl "TEST_VALUE" -JcrcontentTransportNTLMDomain "TEST_VALUE" -JcrcontentTransportNTLMHost "TEST_VALUE" -JcrcontentTransportPassword "TEST_VALUE" -JcrcontentTransportUri "TEST_VALUE" -JcrcontentTransportUser "TEST_VALUE" -JcrcontentTriggerDistribute "TEST_VALUE" -JcrcontentTriggerModified "TEST_VALUE" -JcrcontentTriggerOnOffTime "TEST_VALUE" -JcrcontentTriggerReceive "TEST_VALUE" -JcrcontentTriggerSpecific "TEST_VALUE" -JcrcontentUserId "TEST_VALUE" -JcrprimaryType "TEST_VALUE" -Operation "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Submit-AuthorizableKeystore' {
        It 'Test Submit-AuthorizableKeystore' {
            #$TestResult = Submit-AuthorizableKeystore -IntermediatePath "TEST_VALUE" -AuthorizableId "TEST_VALUE" -Operation "TEST_VALUE" -CurrentPassword "TEST_VALUE" -NewPassword "TEST_VALUE" -RePassword "TEST_VALUE" -KeyPassword "TEST_VALUE" -KeyStorePass "TEST_VALUE" -Alias "TEST_VALUE" -NewAlias "TEST_VALUE" -RemoveAlias "TEST_VALUE" -CertChain "TEST_VALUE" -Pk "TEST_VALUE" -KeyStore "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Submit-Authorizables' {
        It 'Test Submit-Authorizables' {
            #$TestResult = Submit-Authorizables -AuthorizableId "TEST_VALUE" -IntermediatePath "TEST_VALUE" -CreateUser "TEST_VALUE" -CreateGroup "TEST_VALUE" -Reppassword "TEST_VALUE" -ProfileGivenName "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Submit-ConfigAdobeGraniteSamlAuthenticationHandler' {
        It 'Test Submit-ConfigAdobeGraniteSamlAuthenticationHandler' {
            #$TestResult = Submit-ConfigAdobeGraniteSamlAuthenticationHandler -KeyStorePassword "TEST_VALUE" -KeyStorePasswordTypeHint "TEST_VALUE" -ServiceRanking "TEST_VALUE" -ServiceRankingTypeHint "TEST_VALUE" -IdpHttpRedirect "TEST_VALUE" -IdpHttpRedirectTypeHint "TEST_VALUE" -CreateUser "TEST_VALUE" -CreateUserTypeHint "TEST_VALUE" -DefaultRedirectUrl "TEST_VALUE" -DefaultRedirectUrlTypeHint "TEST_VALUE" -UserIDAttribute "TEST_VALUE" -UserIDAttributeTypeHint "TEST_VALUE" -DefaultGroups "TEST_VALUE" -DefaultGroupsTypeHint "TEST_VALUE" -IdpCertAlias "TEST_VALUE" -IdpCertAliasTypeHint "TEST_VALUE" -AddGroupMemberships "TEST_VALUE" -AddGroupMembershipsTypeHint "TEST_VALUE" -Path "TEST_VALUE" -PathTypeHint "TEST_VALUE" -SynchronizeAttributes "TEST_VALUE" -SynchronizeAttributesTypeHint "TEST_VALUE" -ClockTolerance "TEST_VALUE" -ClockToleranceTypeHint "TEST_VALUE" -GroupMembershipAttribute "TEST_VALUE" -GroupMembershipAttributeTypeHint "TEST_VALUE" -IdpUrl "TEST_VALUE" -IdpUrlTypeHint "TEST_VALUE" -LogoutUrl "TEST_VALUE" -LogoutUrlTypeHint "TEST_VALUE" -ServiceProviderEntityId "TEST_VALUE" -ServiceProviderEntityIdTypeHint "TEST_VALUE" -AssertionConsumerServiceURL "TEST_VALUE" -AssertionConsumerServiceURLTypeHint "TEST_VALUE" -HandleLogout "TEST_VALUE" -HandleLogoutTypeHint "TEST_VALUE" -SpPrivateKeyAlias "TEST_VALUE" -SpPrivateKeyAliasTypeHint "TEST_VALUE" -UseEncryption "TEST_VALUE" -UseEncryptionTypeHint "TEST_VALUE" -NameIdFormat "TEST_VALUE" -NameIdFormatTypeHint "TEST_VALUE" -DigestMethod "TEST_VALUE" -DigestMethodTypeHint "TEST_VALUE" -SignatureMethod "TEST_VALUE" -SignatureMethodTypeHint "TEST_VALUE" -UserIntermediatePath "TEST_VALUE" -UserIntermediatePathTypeHint "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Submit-ConfigApacheFelixJettyBasedHttpService' {
        It 'Test Submit-ConfigApacheFelixJettyBasedHttpService' {
            #$TestResult = Submit-ConfigApacheFelixJettyBasedHttpService -OrgApacheFelixHttpsNio "TEST_VALUE" -OrgApacheFelixHttpsNioTypeHint "TEST_VALUE" -OrgApacheFelixHttpsKeystore "TEST_VALUE" -OrgApacheFelixHttpsKeystoreTypeHint "TEST_VALUE" -OrgApacheFelixHttpsKeystorePassword "TEST_VALUE" -OrgApacheFelixHttpsKeystorePasswordTypeHint "TEST_VALUE" -OrgApacheFelixHttpsKeystoreKey "TEST_VALUE" -OrgApacheFelixHttpsKeystoreKeyTypeHint "TEST_VALUE" -OrgApacheFelixHttpsKeystoreKeyPassword "TEST_VALUE" -OrgApacheFelixHttpsKeystoreKeyPasswordTypeHint "TEST_VALUE" -OrgApacheFelixHttpsTruststore "TEST_VALUE" -OrgApacheFelixHttpsTruststoreTypeHint "TEST_VALUE" -OrgApacheFelixHttpsTruststorePassword "TEST_VALUE" -OrgApacheFelixHttpsTruststorePasswordTypeHint "TEST_VALUE" -OrgApacheFelixHttpsClientcertificate "TEST_VALUE" -OrgApacheFelixHttpsClientcertificateTypeHint "TEST_VALUE" -OrgApacheFelixHttpsEnable "TEST_VALUE" -OrgApacheFelixHttpsEnableTypeHint "TEST_VALUE" -OrgOsgiServiceHttpPortSecure "TEST_VALUE" -OrgOsgiServiceHttpPortSecureTypeHint "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Submit-ConfigApacheHttpComponentsProxyConfiguration' {
        It 'Test Submit-ConfigApacheHttpComponentsProxyConfiguration' {
            #$TestResult = Submit-ConfigApacheHttpComponentsProxyConfiguration -ProxyHost "TEST_VALUE" -ProxyHostTypeHint "TEST_VALUE" -ProxyPort "TEST_VALUE" -ProxyPortTypeHint "TEST_VALUE" -ProxyExceptions "TEST_VALUE" -ProxyExceptionsTypeHint "TEST_VALUE" -ProxyEnabled "TEST_VALUE" -ProxyEnabledTypeHint "TEST_VALUE" -ProxyUser "TEST_VALUE" -ProxyUserTypeHint "TEST_VALUE" -ProxyPassword "TEST_VALUE" -ProxyPasswordTypeHint "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Submit-ConfigApacheSlingDavExServlet' {
        It 'Test Submit-ConfigApacheSlingDavExServlet' {
            #$TestResult = Submit-ConfigApacheSlingDavExServlet -Alias "TEST_VALUE" -AliasTypeHint "TEST_VALUE" -DavCreateAbsoluteUri "TEST_VALUE" -DavCreateAbsoluteUriTypeHint "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Submit-ConfigApacheSlingGetServlet' {
        It 'Test Submit-ConfigApacheSlingGetServlet' {
            #$TestResult = Submit-ConfigApacheSlingGetServlet -JsonMaximumresults "TEST_VALUE" -JsonMaximumresultsTypeHint "TEST_VALUE" -EnableHtml "TEST_VALUE" -EnableHtmlTypeHint "TEST_VALUE" -EnableTxt "TEST_VALUE" -EnableTxtTypeHint "TEST_VALUE" -EnableXml "TEST_VALUE" -EnableXmlTypeHint "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Submit-ConfigApacheSlingReferrerFilter' {
        It 'Test Submit-ConfigApacheSlingReferrerFilter' {
            #$TestResult = Submit-ConfigApacheSlingReferrerFilter -AllowEmpty "TEST_VALUE" -AllowEmptyTypeHint "TEST_VALUE" -AllowHosts "TEST_VALUE" -AllowHostsTypeHint "TEST_VALUE" -AllowHostsRegexp "TEST_VALUE" -AllowHostsRegexpTypeHint "TEST_VALUE" -FilterMethods "TEST_VALUE" -FilterMethodsTypeHint "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Submit-ConfigProperty' {
        It 'Test Submit-ConfigProperty' {
            #$TestResult = Submit-ConfigProperty -ConfigNodeName "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Submit-Node' {
        It 'Test Submit-Node' {
            #$TestResult = Submit-Node -Path "TEST_VALUE" -Name "TEST_VALUE" -Operation "TEST_VALUE" -DeleteAuthorizable "TEST_VALUE" -File "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Submit-NodeRw' {
        It 'Test Submit-NodeRw' {
            #$TestResult = Submit-NodeRw -Path "TEST_VALUE" -Name "TEST_VALUE" -AddMembers "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Submit-Path' {
        It 'Test Submit-Path' {
            #$TestResult = Submit-Path -Path "TEST_VALUE" -JcrprimaryType "TEST_VALUE" -Name "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Submit-Query' {
        It 'Test Submit-Query' {
            #$TestResult = Submit-Query -Path "TEST_VALUE" -PLimit "TEST_VALUE" -Var1Property "TEST_VALUE" -Var1PropertyValue "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Submit-TreeActivation' {
        It 'Test Submit-TreeActivation' {
            #$TestResult = Submit-TreeActivation -Ignoredeactivated "TEST_VALUE" -Onlymodified "TEST_VALUE" -Path "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Submit-Truststore' {
        It 'Test Submit-Truststore' {
            #$TestResult = Submit-Truststore -Operation "TEST_VALUE" -NewPassword "TEST_VALUE" -RePassword "TEST_VALUE" -KeyStoreType "TEST_VALUE" -RemoveAlias "TEST_VALUE" -Certificate "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Submit-TruststorePKCS12' {
        It 'Test Submit-TruststorePKCS12' {
            #$TestResult = Submit-TruststorePKCS12 -TruststoreP12 "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

}
