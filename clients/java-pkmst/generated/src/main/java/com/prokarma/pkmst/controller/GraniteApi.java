/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (5.2.1).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package com.prokarma.pkmst.controller;

import java.io.File;

import io.swagger.annotations.*;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.multipart.MultipartFile;
import java.io.IOException;

import java.util.List;
/**
 * Provides the info about api methods
 * @author pkmst
 *
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaPKMSTServerCodegen", date = "2021-09-03T15:25:27.791+10:00[Australia/Melbourne]")
@Api(value = "Granite", description = "the Granite API")
public interface GraniteApi {

    @ApiOperation(value = "", notes = "", response = String.class, authorizations = {
        
        @Authorization(value = "aemAuth")
         }, tags={ "granite", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Default response", response = String.class) })
    @RequestMapping(
        method = RequestMethod.POST,
        value = "/libs/granite/security/post/sslSetup.html",
        produces = { "text/plain" },
        consumes = { "multipart/form-data" }
    )
    ResponseEntity<String> sslSetup(@ApiParam(value = "", required = true)  @RequestParam(value = "keystorePassword", required = true) String keystorePassword,@ApiParam(value = "", required = true)  @RequestParam(value = "keystorePasswordConfirm", required = true) String keystorePasswordConfirm,@ApiParam(value = "", required = true)  @RequestParam(value = "truststorePassword", required = true) String truststorePassword,@ApiParam(value = "", required = true)  @RequestParam(value = "truststorePasswordConfirm", required = true) String truststorePasswordConfirm,@ApiParam(value = "", required = true)  @RequestParam(value = "httpsHostname", required = true) String httpsHostname,@ApiParam(value = "", required = true)  @RequestParam(value = "httpsPort", required = true) String httpsPort,@ApiParam(value = "file detail")  @RequestPart("file") MultipartFile privatekeyFile,@ApiParam(value = "file detail")  @RequestPart("file") MultipartFile certificateFile, @RequestHeader(value = "Accept", required = false) String accept) throws Exception;

}
