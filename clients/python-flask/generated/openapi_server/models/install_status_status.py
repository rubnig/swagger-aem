# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server import util


class InstallStatusStatus(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, finished=None, item_count=None):  # noqa: E501
        """InstallStatusStatus - a model defined in OpenAPI

        :param finished: The finished of this InstallStatusStatus.  # noqa: E501
        :type finished: bool
        :param item_count: The item_count of this InstallStatusStatus.  # noqa: E501
        :type item_count: int
        """
        self.openapi_types = {
            'finished': bool,
            'item_count': int
        }

        self.attribute_map = {
            'finished': 'finished',
            'item_count': 'itemCount'
        }

        self._finished = finished
        self._item_count = item_count

    @classmethod
    def from_dict(cls, dikt) -> 'InstallStatusStatus':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The InstallStatus_status of this InstallStatusStatus.  # noqa: E501
        :rtype: InstallStatusStatus
        """
        return util.deserialize_model(dikt, cls)

    @property
    def finished(self):
        """Gets the finished of this InstallStatusStatus.


        :return: The finished of this InstallStatusStatus.
        :rtype: bool
        """
        return self._finished

    @finished.setter
    def finished(self, finished):
        """Sets the finished of this InstallStatusStatus.


        :param finished: The finished of this InstallStatusStatus.
        :type finished: bool
        """

        self._finished = finished

    @property
    def item_count(self):
        """Gets the item_count of this InstallStatusStatus.


        :return: The item_count of this InstallStatusStatus.
        :rtype: int
        """
        return self._item_count

    @item_count.setter
    def item_count(self, item_count):
        """Sets the item_count of this InstallStatusStatus.


        :param item_count: The item_count of this InstallStatusStatus.
        :type item_count: int
        """

        self._item_count = item_count
