# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server.models.bundle_data import BundleData
from openapi_server import util

from openapi_server.models.bundle_data import BundleData  # noqa: E501

class BundleInfo(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, status=None, s=None, data=None):  # noqa: E501
        """BundleInfo - a model defined in OpenAPI

        :param status: The status of this BundleInfo.  # noqa: E501
        :type status: str
        :param s: The s of this BundleInfo.  # noqa: E501
        :type s: List[int]
        :param data: The data of this BundleInfo.  # noqa: E501
        :type data: List[BundleData]
        """
        self.openapi_types = {
            'status': str,
            's': List[int],
            'data': List[BundleData]
        }

        self.attribute_map = {
            'status': 'status',
            's': 's',
            'data': 'data'
        }

        self._status = status
        self._s = s
        self._data = data

    @classmethod
    def from_dict(cls, dikt) -> 'BundleInfo':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The BundleInfo of this BundleInfo.  # noqa: E501
        :rtype: BundleInfo
        """
        return util.deserialize_model(dikt, cls)

    @property
    def status(self):
        """Gets the status of this BundleInfo.

        Status description of all bundles  # noqa: E501

        :return: The status of this BundleInfo.
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this BundleInfo.

        Status description of all bundles  # noqa: E501

        :param status: The status of this BundleInfo.
        :type status: str
        """

        self._status = status

    @property
    def s(self):
        """Gets the s of this BundleInfo.


        :return: The s of this BundleInfo.
        :rtype: List[int]
        """
        return self._s

    @s.setter
    def s(self, s):
        """Sets the s of this BundleInfo.


        :param s: The s of this BundleInfo.
        :type s: List[int]
        """

        self._s = s

    @property
    def data(self):
        """Gets the data of this BundleInfo.


        :return: The data of this BundleInfo.
        :rtype: List[BundleData]
        """
        return self._data

    @data.setter
    def data(self, data):
        """Sets the data of this BundleInfo.


        :param data: The data of this BundleInfo.
        :type data: List[BundleData]
        """

        self._data = data
