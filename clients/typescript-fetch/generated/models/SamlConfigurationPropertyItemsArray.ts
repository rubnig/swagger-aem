/* tslint:disable */
/* eslint-disable */
/**
 * Adobe Experience Manager (AEM) API
 * Swagger AEM is an OpenAPI specification for Adobe Experience Manager (AEM) API
 *
 * The version of the OpenAPI document: 3.5.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface SamlConfigurationPropertyItemsArray
 */
export interface SamlConfigurationPropertyItemsArray {
    /**
     * property name
     * @type {string}
     * @memberof SamlConfigurationPropertyItemsArray
     */
    name?: string;
    /**
     * True if optional
     * @type {boolean}
     * @memberof SamlConfigurationPropertyItemsArray
     */
    optional?: boolean;
    /**
     * True if property is set
     * @type {boolean}
     * @memberof SamlConfigurationPropertyItemsArray
     */
    isSet?: boolean;
    /**
     * Property type, 1=String, 3=long, 11=boolean, 12=Password
     * @type {number}
     * @memberof SamlConfigurationPropertyItemsArray
     */
    type?: number;
    /**
     * Property value
     * @type {Array<string>}
     * @memberof SamlConfigurationPropertyItemsArray
     */
    values?: Array<string>;
    /**
     * Property description
     * @type {string}
     * @memberof SamlConfigurationPropertyItemsArray
     */
    description?: string;
}

export function SamlConfigurationPropertyItemsArrayFromJSON(json: any): SamlConfigurationPropertyItemsArray {
    return SamlConfigurationPropertyItemsArrayFromJSONTyped(json, false);
}

export function SamlConfigurationPropertyItemsArrayFromJSONTyped(json: any, ignoreDiscriminator: boolean): SamlConfigurationPropertyItemsArray {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'name': !exists(json, 'name') ? undefined : json['name'],
        'optional': !exists(json, 'optional') ? undefined : json['optional'],
        'isSet': !exists(json, 'is_set') ? undefined : json['is_set'],
        'type': !exists(json, 'type') ? undefined : json['type'],
        'values': !exists(json, 'values') ? undefined : json['values'],
        'description': !exists(json, 'description') ? undefined : json['description'],
    };
}

export function SamlConfigurationPropertyItemsArrayToJSON(value?: SamlConfigurationPropertyItemsArray | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'name': value.name,
        'optional': value.optional,
        'is_set': value.isSet,
        'type': value.type,
        'values': value.values,
        'description': value.description,
    };
}


