/* tslint:disable */
/* eslint-disable */
/**
 * Adobe Experience Manager (AEM) API
 * Swagger AEM is an OpenAPI specification for Adobe Experience Manager (AEM) API
 *
 * The version of the OpenAPI document: 3.5.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    KeystoreChainItems,
    KeystoreChainItemsFromJSON,
    KeystoreChainItemsFromJSONTyped,
    KeystoreChainItemsToJSON,
} from './';

/**
 * 
 * @export
 * @interface KeystoreItems
 */
export interface KeystoreItems {
    /**
     * Keystore alias name
     * @type {string}
     * @memberof KeystoreItems
     */
    alias?: string;
    /**
     * e.g. "privateKey"
     * @type {string}
     * @memberof KeystoreItems
     */
    entryType?: string;
    /**
     * e.g. "RSA"
     * @type {string}
     * @memberof KeystoreItems
     */
    algorithm?: string;
    /**
     * e.g. "PKCS#8"
     * @type {string}
     * @memberof KeystoreItems
     */
    format?: string;
    /**
     * 
     * @type {Array<KeystoreChainItems>}
     * @memberof KeystoreItems
     */
    chain?: Array<KeystoreChainItems>;
}

export function KeystoreItemsFromJSON(json: any): KeystoreItems {
    return KeystoreItemsFromJSONTyped(json, false);
}

export function KeystoreItemsFromJSONTyped(json: any, ignoreDiscriminator: boolean): KeystoreItems {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'alias': !exists(json, 'alias') ? undefined : json['alias'],
        'entryType': !exists(json, 'entryType') ? undefined : json['entryType'],
        'algorithm': !exists(json, 'algorithm') ? undefined : json['algorithm'],
        'format': !exists(json, 'format') ? undefined : json['format'],
        'chain': !exists(json, 'chain') ? undefined : ((json['chain'] as Array<any>).map(KeystoreChainItemsFromJSON)),
    };
}

export function KeystoreItemsToJSON(value?: KeystoreItems | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'alias': value.alias,
        'entryType': value.entryType,
        'algorithm': value.algorithm,
        'format': value.format,
        'chain': value.chain === undefined ? undefined : ((value.chain as Array<any>).map(KeystoreChainItemsToJSON)),
    };
}


