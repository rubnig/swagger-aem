/*
 * Adobe Experience Manager (AEM) API
 *
 * Swagger AEM is an OpenAPI specification for Adobe Experience Manager (AEM) API
 *
 * The version of the OpenAPI document: 3.5.0-pre.0
 * Contact: opensource@shinesolutions.com
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct BundleData {
    /// Bundle ID
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<i32>,
    /// Bundle name
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    /// Is bundle a fragment
    #[serde(rename = "fragment", skip_serializing_if = "Option::is_none")]
    pub fragment: Option<bool>,
    /// Numeric raw bundle state value
    #[serde(rename = "stateRaw", skip_serializing_if = "Option::is_none")]
    pub state_raw: Option<i32>,
    /// Bundle state value
    #[serde(rename = "state", skip_serializing_if = "Option::is_none")]
    pub state: Option<String>,
    /// Bundle version
    #[serde(rename = "version", skip_serializing_if = "Option::is_none")]
    pub version: Option<String>,
    /// Bundle symbolic name
    #[serde(rename = "symbolicName", skip_serializing_if = "Option::is_none")]
    pub symbolic_name: Option<String>,
    /// Bundle category
    #[serde(rename = "category", skip_serializing_if = "Option::is_none")]
    pub category: Option<String>,
    #[serde(rename = "props", skip_serializing_if = "Option::is_none")]
    pub props: Option<Vec<crate::models::BundleDataProp>>,
}

impl BundleData {
    pub fn new() -> BundleData {
        BundleData {
            id: None,
            name: None,
            fragment: None,
            state_raw: None,
            state: None,
            version: None,
            symbolic_name: None,
            category: None,
            props: None,
        }
    }
}


