/*
 * Adobe Experience Manager (AEM) API
 *
 * Swagger AEM is an OpenAPI specification for Adobe Experience Manager (AEM) API
 *
 * The version of the OpenAPI document: 3.5.0-pre.0
 * Contact: opensource@shinesolutions.com
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct KeystoreItems {
    /// Keystore alias name
    #[serde(rename = "alias", skip_serializing_if = "Option::is_none")]
    pub alias: Option<String>,
    /// e.g. \"privateKey\"
    #[serde(rename = "entryType", skip_serializing_if = "Option::is_none")]
    pub entry_type: Option<String>,
    /// e.g. \"RSA\"
    #[serde(rename = "algorithm", skip_serializing_if = "Option::is_none")]
    pub algorithm: Option<String>,
    /// e.g. \"PKCS#8\"
    #[serde(rename = "format", skip_serializing_if = "Option::is_none")]
    pub format: Option<String>,
    #[serde(rename = "chain", skip_serializing_if = "Option::is_none")]
    pub chain: Option<Vec<crate::models::KeystoreChainItems>>,
}

impl KeystoreItems {
    pub fn new() -> KeystoreItems {
        KeystoreItems {
            alias: None,
            entry_type: None,
            algorithm: None,
            format: None,
            chain: None,
        }
    }
}


