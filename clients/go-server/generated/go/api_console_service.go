/*
 * Adobe Experience Manager (AEM) API
 *
 * Swagger AEM is an OpenAPI specification for Adobe Experience Manager (AEM) API
 *
 * API version: 3.5.0-pre.0
 * Contact: opensource@shinesolutions.com
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

import (
	"context"
	"net/http"
	"errors"
)

// ConsoleApiService is a service that implents the logic for the ConsoleApiServicer
// This service should implement the business logic for every endpoint for the ConsoleApi API. 
// Include any external packages or services that will be required by this service.
type ConsoleApiService struct {
}

// NewConsoleApiService creates a default api service
func NewConsoleApiService() ConsoleApiServicer {
	return &ConsoleApiService{}
}

// GetAemProductInfo - 
func (s *ConsoleApiService) GetAemProductInfo(ctx context.Context) (ImplResponse, error) {
	// TODO - update GetAemProductInfo with the required logic for this service method.
	// Add api_console_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(0, []string{}) or use other options such as http.Ok ...
	//return Response(0, []string{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("GetAemProductInfo method not implemented")
}

// GetBundleInfo - 
func (s *ConsoleApiService) GetBundleInfo(ctx context.Context, name string) (ImplResponse, error) {
	// TODO - update GetBundleInfo with the required logic for this service method.
	// Add api_console_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(200, BundleInfo{}) or use other options such as http.Ok ...
	//return Response(200, BundleInfo{}), nil

	//TODO: Uncomment the next line to return response Response(0, string{}) or use other options such as http.Ok ...
	//return Response(0, string{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("GetBundleInfo method not implemented")
}

// GetConfigMgr - 
func (s *ConsoleApiService) GetConfigMgr(ctx context.Context) (ImplResponse, error) {
	// TODO - update GetConfigMgr with the required logic for this service method.
	// Add api_console_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(200, string{}) or use other options such as http.Ok ...
	//return Response(200, string{}), nil

	//TODO: Uncomment the next line to return response Response(5XX, {}) or use other options such as http.Ok ...
	//return Response(5XX, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("GetConfigMgr method not implemented")
}

// PostBundle - 
func (s *ConsoleApiService) PostBundle(ctx context.Context, name string, action string) (ImplResponse, error) {
	// TODO - update PostBundle with the required logic for this service method.
	// Add api_console_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(0, {}) or use other options such as http.Ok ...
	//return Response(0, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("PostBundle method not implemented")
}

// PostJmxRepository - 
func (s *ConsoleApiService) PostJmxRepository(ctx context.Context, action string) (ImplResponse, error) {
	// TODO - update PostJmxRepository with the required logic for this service method.
	// Add api_console_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(0, {}) or use other options such as http.Ok ...
	//return Response(0, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("PostJmxRepository method not implemented")
}

// PostSamlConfiguration - 
func (s *ConsoleApiService) PostSamlConfiguration(ctx context.Context, post bool, apply bool, delete bool, action string, location string, path []string, serviceRanking int32, idpUrl string, idpCertAlias string, idpHttpRedirect bool, serviceProviderEntityId string, assertionConsumerServiceURL string, spPrivateKeyAlias string, keyStorePassword string, defaultRedirectUrl string, userIDAttribute string, useEncryption bool, createUser bool, addGroupMemberships bool, groupMembershipAttribute string, defaultGroups []string, nameIdFormat string, synchronizeAttributes []string, handleLogout bool, logoutUrl string, clockTolerance int32, digestMethod string, signatureMethod string, userIntermediatePath string, propertylist []string) (ImplResponse, error) {
	// TODO - update PostSamlConfiguration with the required logic for this service method.
	// Add api_console_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(200, SamlConfigurationInfo{}) or use other options such as http.Ok ...
	//return Response(200, SamlConfigurationInfo{}), nil

	//TODO: Uncomment the next line to return response Response(302, string{}) or use other options such as http.Ok ...
	//return Response(302, string{}), nil

	//TODO: Uncomment the next line to return response Response(0, string{}) or use other options such as http.Ok ...
	//return Response(0, string{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("PostSamlConfiguration method not implemented")
}

