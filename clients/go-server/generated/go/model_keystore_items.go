/*
 * Adobe Experience Manager (AEM) API
 *
 * Swagger AEM is an OpenAPI specification for Adobe Experience Manager (AEM) API
 *
 * API version: 3.5.0-pre.0
 * Contact: opensource@shinesolutions.com
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

type KeystoreItems struct {

	// Keystore alias name
	Alias string `json:"alias,omitempty"`

	// e.g. \"privateKey\"
	EntryType string `json:"entryType,omitempty"`

	// e.g. \"RSA\"
	Algorithm string `json:"algorithm,omitempty"`

	// e.g. \"PKCS#8\"
	Format string `json:"format,omitempty"`

	Chain []KeystoreChainItems `json:"chain,omitempty"`
}

// AssertKeystoreItemsRequired checks if the required fields are not zero-ed
func AssertKeystoreItemsRequired(obj KeystoreItems) error {
	for _, el := range obj.Chain {
		if err := AssertKeystoreChainItemsRequired(el); err != nil {
			return err
		}
	}
	return nil
}

// AssertRecurseKeystoreItemsRequired recursively checks if required fields are not zero-ed in a nested slice.
// Accepts only nested slice of KeystoreItems (e.g. [][]KeystoreItems), otherwise ErrTypeAssertionError is thrown.
func AssertRecurseKeystoreItemsRequired(objSlice interface{}) error {
	return AssertRecurseInterfaceRequired(objSlice, func(obj interface{}) error {
		aKeystoreItems, ok := obj.(KeystoreItems)
		if !ok {
			return ErrTypeAssertionError
		}
		return AssertKeystoreItemsRequired(aKeystoreItems)
	})
}
