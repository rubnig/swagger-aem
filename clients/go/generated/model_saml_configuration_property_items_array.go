/*
Adobe Experience Manager (AEM) API

Swagger AEM is an OpenAPI specification for Adobe Experience Manager (AEM) API

API version: 3.5.0-pre.0
Contact: opensource@shinesolutions.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// SamlConfigurationPropertyItemsArray struct for SamlConfigurationPropertyItemsArray
type SamlConfigurationPropertyItemsArray struct {
	// property name
	Name *string `json:"name,omitempty"`
	// True if optional
	Optional *bool `json:"optional,omitempty"`
	// True if property is set
	IsSet *bool `json:"is_set,omitempty"`
	// Property type, 1=String, 3=long, 11=boolean, 12=Password
	Type *int32 `json:"type,omitempty"`
	// Property value
	Values *[]string `json:"values,omitempty"`
	// Property description
	Description *string `json:"description,omitempty"`
}

// NewSamlConfigurationPropertyItemsArray instantiates a new SamlConfigurationPropertyItemsArray object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSamlConfigurationPropertyItemsArray() *SamlConfigurationPropertyItemsArray {
	this := SamlConfigurationPropertyItemsArray{}
	return &this
}

// NewSamlConfigurationPropertyItemsArrayWithDefaults instantiates a new SamlConfigurationPropertyItemsArray object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSamlConfigurationPropertyItemsArrayWithDefaults() *SamlConfigurationPropertyItemsArray {
	this := SamlConfigurationPropertyItemsArray{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *SamlConfigurationPropertyItemsArray) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SamlConfigurationPropertyItemsArray) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *SamlConfigurationPropertyItemsArray) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *SamlConfigurationPropertyItemsArray) SetName(v string) {
	o.Name = &v
}

// GetOptional returns the Optional field value if set, zero value otherwise.
func (o *SamlConfigurationPropertyItemsArray) GetOptional() bool {
	if o == nil || o.Optional == nil {
		var ret bool
		return ret
	}
	return *o.Optional
}

// GetOptionalOk returns a tuple with the Optional field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SamlConfigurationPropertyItemsArray) GetOptionalOk() (*bool, bool) {
	if o == nil || o.Optional == nil {
		return nil, false
	}
	return o.Optional, true
}

// HasOptional returns a boolean if a field has been set.
func (o *SamlConfigurationPropertyItemsArray) HasOptional() bool {
	if o != nil && o.Optional != nil {
		return true
	}

	return false
}

// SetOptional gets a reference to the given bool and assigns it to the Optional field.
func (o *SamlConfigurationPropertyItemsArray) SetOptional(v bool) {
	o.Optional = &v
}

// GetIsSet returns the IsSet field value if set, zero value otherwise.
func (o *SamlConfigurationPropertyItemsArray) GetIsSet() bool {
	if o == nil || o.IsSet == nil {
		var ret bool
		return ret
	}
	return *o.IsSet
}

// GetIsSetOk returns a tuple with the IsSet field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SamlConfigurationPropertyItemsArray) GetIsSetOk() (*bool, bool) {
	if o == nil || o.IsSet == nil {
		return nil, false
	}
	return o.IsSet, true
}

// HasIsSet returns a boolean if a field has been set.
func (o *SamlConfigurationPropertyItemsArray) HasIsSet() bool {
	if o != nil && o.IsSet != nil {
		return true
	}

	return false
}

// SetIsSet gets a reference to the given bool and assigns it to the IsSet field.
func (o *SamlConfigurationPropertyItemsArray) SetIsSet(v bool) {
	o.IsSet = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *SamlConfigurationPropertyItemsArray) GetType() int32 {
	if o == nil || o.Type == nil {
		var ret int32
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SamlConfigurationPropertyItemsArray) GetTypeOk() (*int32, bool) {
	if o == nil || o.Type == nil {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *SamlConfigurationPropertyItemsArray) HasType() bool {
	if o != nil && o.Type != nil {
		return true
	}

	return false
}

// SetType gets a reference to the given int32 and assigns it to the Type field.
func (o *SamlConfigurationPropertyItemsArray) SetType(v int32) {
	o.Type = &v
}

// GetValues returns the Values field value if set, zero value otherwise.
func (o *SamlConfigurationPropertyItemsArray) GetValues() []string {
	if o == nil || o.Values == nil {
		var ret []string
		return ret
	}
	return *o.Values
}

// GetValuesOk returns a tuple with the Values field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SamlConfigurationPropertyItemsArray) GetValuesOk() (*[]string, bool) {
	if o == nil || o.Values == nil {
		return nil, false
	}
	return o.Values, true
}

// HasValues returns a boolean if a field has been set.
func (o *SamlConfigurationPropertyItemsArray) HasValues() bool {
	if o != nil && o.Values != nil {
		return true
	}

	return false
}

// SetValues gets a reference to the given []string and assigns it to the Values field.
func (o *SamlConfigurationPropertyItemsArray) SetValues(v []string) {
	o.Values = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *SamlConfigurationPropertyItemsArray) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SamlConfigurationPropertyItemsArray) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *SamlConfigurationPropertyItemsArray) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *SamlConfigurationPropertyItemsArray) SetDescription(v string) {
	o.Description = &v
}

func (o SamlConfigurationPropertyItemsArray) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.Optional != nil {
		toSerialize["optional"] = o.Optional
	}
	if o.IsSet != nil {
		toSerialize["is_set"] = o.IsSet
	}
	if o.Type != nil {
		toSerialize["type"] = o.Type
	}
	if o.Values != nil {
		toSerialize["values"] = o.Values
	}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	return json.Marshal(toSerialize)
}

type NullableSamlConfigurationPropertyItemsArray struct {
	value *SamlConfigurationPropertyItemsArray
	isSet bool
}

func (v NullableSamlConfigurationPropertyItemsArray) Get() *SamlConfigurationPropertyItemsArray {
	return v.value
}

func (v *NullableSamlConfigurationPropertyItemsArray) Set(val *SamlConfigurationPropertyItemsArray) {
	v.value = val
	v.isSet = true
}

func (v NullableSamlConfigurationPropertyItemsArray) IsSet() bool {
	return v.isSet
}

func (v *NullableSamlConfigurationPropertyItemsArray) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSamlConfigurationPropertyItemsArray(val *SamlConfigurationPropertyItemsArray) *NullableSamlConfigurationPropertyItemsArray {
	return &NullableSamlConfigurationPropertyItemsArray{value: val, isSet: true}
}

func (v NullableSamlConfigurationPropertyItemsArray) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSamlConfigurationPropertyItemsArray) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


