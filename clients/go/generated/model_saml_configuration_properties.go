/*
Adobe Experience Manager (AEM) API

Swagger AEM is an OpenAPI specification for Adobe Experience Manager (AEM) API

API version: 3.5.0-pre.0
Contact: opensource@shinesolutions.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// SamlConfigurationProperties struct for SamlConfigurationProperties
type SamlConfigurationProperties struct {
	Path *SamlConfigurationPropertyItemsArray `json:"path,omitempty"`
	ServiceRanking *SamlConfigurationPropertyItemsLong `json:"service.ranking,omitempty"`
	IdpUrl *SamlConfigurationPropertyItemsString `json:"idpUrl,omitempty"`
	IdpCertAlias *SamlConfigurationPropertyItemsString `json:"idpCertAlias,omitempty"`
	IdpHttpRedirect *SamlConfigurationPropertyItemsBoolean `json:"idpHttpRedirect,omitempty"`
	ServiceProviderEntityId *SamlConfigurationPropertyItemsString `json:"serviceProviderEntityId,omitempty"`
	AssertionConsumerServiceURL *SamlConfigurationPropertyItemsString `json:"assertionConsumerServiceURL,omitempty"`
	SpPrivateKeyAlias *SamlConfigurationPropertyItemsString `json:"spPrivateKeyAlias,omitempty"`
	KeyStorePassword *SamlConfigurationPropertyItemsString `json:"keyStorePassword,omitempty"`
	DefaultRedirectUrl *SamlConfigurationPropertyItemsString `json:"defaultRedirectUrl,omitempty"`
	UserIDAttribute *SamlConfigurationPropertyItemsString `json:"userIDAttribute,omitempty"`
	UseEncryption *SamlConfigurationPropertyItemsBoolean `json:"useEncryption,omitempty"`
	CreateUser *SamlConfigurationPropertyItemsBoolean `json:"createUser,omitempty"`
	AddGroupMemberships *SamlConfigurationPropertyItemsBoolean `json:"addGroupMemberships,omitempty"`
	GroupMembershipAttribute *SamlConfigurationPropertyItemsString `json:"groupMembershipAttribute,omitempty"`
	DefaultGroups *SamlConfigurationPropertyItemsArray `json:"defaultGroups,omitempty"`
	NameIdFormat *SamlConfigurationPropertyItemsString `json:"nameIdFormat,omitempty"`
	SynchronizeAttributes *SamlConfigurationPropertyItemsArray `json:"synchronizeAttributes,omitempty"`
	HandleLogout *SamlConfigurationPropertyItemsBoolean `json:"handleLogout,omitempty"`
	LogoutUrl *SamlConfigurationPropertyItemsString `json:"logoutUrl,omitempty"`
	ClockTolerance *SamlConfigurationPropertyItemsLong `json:"clockTolerance,omitempty"`
	DigestMethod *SamlConfigurationPropertyItemsString `json:"digestMethod,omitempty"`
	SignatureMethod *SamlConfigurationPropertyItemsString `json:"signatureMethod,omitempty"`
	UserIntermediatePath *SamlConfigurationPropertyItemsString `json:"userIntermediatePath,omitempty"`
}

// NewSamlConfigurationProperties instantiates a new SamlConfigurationProperties object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSamlConfigurationProperties() *SamlConfigurationProperties {
	this := SamlConfigurationProperties{}
	return &this
}

// NewSamlConfigurationPropertiesWithDefaults instantiates a new SamlConfigurationProperties object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSamlConfigurationPropertiesWithDefaults() *SamlConfigurationProperties {
	this := SamlConfigurationProperties{}
	return &this
}

// GetPath returns the Path field value if set, zero value otherwise.
func (o *SamlConfigurationProperties) GetPath() SamlConfigurationPropertyItemsArray {
	if o == nil || o.Path == nil {
		var ret SamlConfigurationPropertyItemsArray
		return ret
	}
	return *o.Path
}

// GetPathOk returns a tuple with the Path field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SamlConfigurationProperties) GetPathOk() (*SamlConfigurationPropertyItemsArray, bool) {
	if o == nil || o.Path == nil {
		return nil, false
	}
	return o.Path, true
}

// HasPath returns a boolean if a field has been set.
func (o *SamlConfigurationProperties) HasPath() bool {
	if o != nil && o.Path != nil {
		return true
	}

	return false
}

// SetPath gets a reference to the given SamlConfigurationPropertyItemsArray and assigns it to the Path field.
func (o *SamlConfigurationProperties) SetPath(v SamlConfigurationPropertyItemsArray) {
	o.Path = &v
}

// GetServiceRanking returns the ServiceRanking field value if set, zero value otherwise.
func (o *SamlConfigurationProperties) GetServiceRanking() SamlConfigurationPropertyItemsLong {
	if o == nil || o.ServiceRanking == nil {
		var ret SamlConfigurationPropertyItemsLong
		return ret
	}
	return *o.ServiceRanking
}

// GetServiceRankingOk returns a tuple with the ServiceRanking field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SamlConfigurationProperties) GetServiceRankingOk() (*SamlConfigurationPropertyItemsLong, bool) {
	if o == nil || o.ServiceRanking == nil {
		return nil, false
	}
	return o.ServiceRanking, true
}

// HasServiceRanking returns a boolean if a field has been set.
func (o *SamlConfigurationProperties) HasServiceRanking() bool {
	if o != nil && o.ServiceRanking != nil {
		return true
	}

	return false
}

// SetServiceRanking gets a reference to the given SamlConfigurationPropertyItemsLong and assigns it to the ServiceRanking field.
func (o *SamlConfigurationProperties) SetServiceRanking(v SamlConfigurationPropertyItemsLong) {
	o.ServiceRanking = &v
}

// GetIdpUrl returns the IdpUrl field value if set, zero value otherwise.
func (o *SamlConfigurationProperties) GetIdpUrl() SamlConfigurationPropertyItemsString {
	if o == nil || o.IdpUrl == nil {
		var ret SamlConfigurationPropertyItemsString
		return ret
	}
	return *o.IdpUrl
}

// GetIdpUrlOk returns a tuple with the IdpUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SamlConfigurationProperties) GetIdpUrlOk() (*SamlConfigurationPropertyItemsString, bool) {
	if o == nil || o.IdpUrl == nil {
		return nil, false
	}
	return o.IdpUrl, true
}

// HasIdpUrl returns a boolean if a field has been set.
func (o *SamlConfigurationProperties) HasIdpUrl() bool {
	if o != nil && o.IdpUrl != nil {
		return true
	}

	return false
}

// SetIdpUrl gets a reference to the given SamlConfigurationPropertyItemsString and assigns it to the IdpUrl field.
func (o *SamlConfigurationProperties) SetIdpUrl(v SamlConfigurationPropertyItemsString) {
	o.IdpUrl = &v
}

// GetIdpCertAlias returns the IdpCertAlias field value if set, zero value otherwise.
func (o *SamlConfigurationProperties) GetIdpCertAlias() SamlConfigurationPropertyItemsString {
	if o == nil || o.IdpCertAlias == nil {
		var ret SamlConfigurationPropertyItemsString
		return ret
	}
	return *o.IdpCertAlias
}

// GetIdpCertAliasOk returns a tuple with the IdpCertAlias field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SamlConfigurationProperties) GetIdpCertAliasOk() (*SamlConfigurationPropertyItemsString, bool) {
	if o == nil || o.IdpCertAlias == nil {
		return nil, false
	}
	return o.IdpCertAlias, true
}

// HasIdpCertAlias returns a boolean if a field has been set.
func (o *SamlConfigurationProperties) HasIdpCertAlias() bool {
	if o != nil && o.IdpCertAlias != nil {
		return true
	}

	return false
}

// SetIdpCertAlias gets a reference to the given SamlConfigurationPropertyItemsString and assigns it to the IdpCertAlias field.
func (o *SamlConfigurationProperties) SetIdpCertAlias(v SamlConfigurationPropertyItemsString) {
	o.IdpCertAlias = &v
}

// GetIdpHttpRedirect returns the IdpHttpRedirect field value if set, zero value otherwise.
func (o *SamlConfigurationProperties) GetIdpHttpRedirect() SamlConfigurationPropertyItemsBoolean {
	if o == nil || o.IdpHttpRedirect == nil {
		var ret SamlConfigurationPropertyItemsBoolean
		return ret
	}
	return *o.IdpHttpRedirect
}

// GetIdpHttpRedirectOk returns a tuple with the IdpHttpRedirect field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SamlConfigurationProperties) GetIdpHttpRedirectOk() (*SamlConfigurationPropertyItemsBoolean, bool) {
	if o == nil || o.IdpHttpRedirect == nil {
		return nil, false
	}
	return o.IdpHttpRedirect, true
}

// HasIdpHttpRedirect returns a boolean if a field has been set.
func (o *SamlConfigurationProperties) HasIdpHttpRedirect() bool {
	if o != nil && o.IdpHttpRedirect != nil {
		return true
	}

	return false
}

// SetIdpHttpRedirect gets a reference to the given SamlConfigurationPropertyItemsBoolean and assigns it to the IdpHttpRedirect field.
func (o *SamlConfigurationProperties) SetIdpHttpRedirect(v SamlConfigurationPropertyItemsBoolean) {
	o.IdpHttpRedirect = &v
}

// GetServiceProviderEntityId returns the ServiceProviderEntityId field value if set, zero value otherwise.
func (o *SamlConfigurationProperties) GetServiceProviderEntityId() SamlConfigurationPropertyItemsString {
	if o == nil || o.ServiceProviderEntityId == nil {
		var ret SamlConfigurationPropertyItemsString
		return ret
	}
	return *o.ServiceProviderEntityId
}

// GetServiceProviderEntityIdOk returns a tuple with the ServiceProviderEntityId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SamlConfigurationProperties) GetServiceProviderEntityIdOk() (*SamlConfigurationPropertyItemsString, bool) {
	if o == nil || o.ServiceProviderEntityId == nil {
		return nil, false
	}
	return o.ServiceProviderEntityId, true
}

// HasServiceProviderEntityId returns a boolean if a field has been set.
func (o *SamlConfigurationProperties) HasServiceProviderEntityId() bool {
	if o != nil && o.ServiceProviderEntityId != nil {
		return true
	}

	return false
}

// SetServiceProviderEntityId gets a reference to the given SamlConfigurationPropertyItemsString and assigns it to the ServiceProviderEntityId field.
func (o *SamlConfigurationProperties) SetServiceProviderEntityId(v SamlConfigurationPropertyItemsString) {
	o.ServiceProviderEntityId = &v
}

// GetAssertionConsumerServiceURL returns the AssertionConsumerServiceURL field value if set, zero value otherwise.
func (o *SamlConfigurationProperties) GetAssertionConsumerServiceURL() SamlConfigurationPropertyItemsString {
	if o == nil || o.AssertionConsumerServiceURL == nil {
		var ret SamlConfigurationPropertyItemsString
		return ret
	}
	return *o.AssertionConsumerServiceURL
}

// GetAssertionConsumerServiceURLOk returns a tuple with the AssertionConsumerServiceURL field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SamlConfigurationProperties) GetAssertionConsumerServiceURLOk() (*SamlConfigurationPropertyItemsString, bool) {
	if o == nil || o.AssertionConsumerServiceURL == nil {
		return nil, false
	}
	return o.AssertionConsumerServiceURL, true
}

// HasAssertionConsumerServiceURL returns a boolean if a field has been set.
func (o *SamlConfigurationProperties) HasAssertionConsumerServiceURL() bool {
	if o != nil && o.AssertionConsumerServiceURL != nil {
		return true
	}

	return false
}

// SetAssertionConsumerServiceURL gets a reference to the given SamlConfigurationPropertyItemsString and assigns it to the AssertionConsumerServiceURL field.
func (o *SamlConfigurationProperties) SetAssertionConsumerServiceURL(v SamlConfigurationPropertyItemsString) {
	o.AssertionConsumerServiceURL = &v
}

// GetSpPrivateKeyAlias returns the SpPrivateKeyAlias field value if set, zero value otherwise.
func (o *SamlConfigurationProperties) GetSpPrivateKeyAlias() SamlConfigurationPropertyItemsString {
	if o == nil || o.SpPrivateKeyAlias == nil {
		var ret SamlConfigurationPropertyItemsString
		return ret
	}
	return *o.SpPrivateKeyAlias
}

// GetSpPrivateKeyAliasOk returns a tuple with the SpPrivateKeyAlias field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SamlConfigurationProperties) GetSpPrivateKeyAliasOk() (*SamlConfigurationPropertyItemsString, bool) {
	if o == nil || o.SpPrivateKeyAlias == nil {
		return nil, false
	}
	return o.SpPrivateKeyAlias, true
}

// HasSpPrivateKeyAlias returns a boolean if a field has been set.
func (o *SamlConfigurationProperties) HasSpPrivateKeyAlias() bool {
	if o != nil && o.SpPrivateKeyAlias != nil {
		return true
	}

	return false
}

// SetSpPrivateKeyAlias gets a reference to the given SamlConfigurationPropertyItemsString and assigns it to the SpPrivateKeyAlias field.
func (o *SamlConfigurationProperties) SetSpPrivateKeyAlias(v SamlConfigurationPropertyItemsString) {
	o.SpPrivateKeyAlias = &v
}

// GetKeyStorePassword returns the KeyStorePassword field value if set, zero value otherwise.
func (o *SamlConfigurationProperties) GetKeyStorePassword() SamlConfigurationPropertyItemsString {
	if o == nil || o.KeyStorePassword == nil {
		var ret SamlConfigurationPropertyItemsString
		return ret
	}
	return *o.KeyStorePassword
}

// GetKeyStorePasswordOk returns a tuple with the KeyStorePassword field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SamlConfigurationProperties) GetKeyStorePasswordOk() (*SamlConfigurationPropertyItemsString, bool) {
	if o == nil || o.KeyStorePassword == nil {
		return nil, false
	}
	return o.KeyStorePassword, true
}

// HasKeyStorePassword returns a boolean if a field has been set.
func (o *SamlConfigurationProperties) HasKeyStorePassword() bool {
	if o != nil && o.KeyStorePassword != nil {
		return true
	}

	return false
}

// SetKeyStorePassword gets a reference to the given SamlConfigurationPropertyItemsString and assigns it to the KeyStorePassword field.
func (o *SamlConfigurationProperties) SetKeyStorePassword(v SamlConfigurationPropertyItemsString) {
	o.KeyStorePassword = &v
}

// GetDefaultRedirectUrl returns the DefaultRedirectUrl field value if set, zero value otherwise.
func (o *SamlConfigurationProperties) GetDefaultRedirectUrl() SamlConfigurationPropertyItemsString {
	if o == nil || o.DefaultRedirectUrl == nil {
		var ret SamlConfigurationPropertyItemsString
		return ret
	}
	return *o.DefaultRedirectUrl
}

// GetDefaultRedirectUrlOk returns a tuple with the DefaultRedirectUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SamlConfigurationProperties) GetDefaultRedirectUrlOk() (*SamlConfigurationPropertyItemsString, bool) {
	if o == nil || o.DefaultRedirectUrl == nil {
		return nil, false
	}
	return o.DefaultRedirectUrl, true
}

// HasDefaultRedirectUrl returns a boolean if a field has been set.
func (o *SamlConfigurationProperties) HasDefaultRedirectUrl() bool {
	if o != nil && o.DefaultRedirectUrl != nil {
		return true
	}

	return false
}

// SetDefaultRedirectUrl gets a reference to the given SamlConfigurationPropertyItemsString and assigns it to the DefaultRedirectUrl field.
func (o *SamlConfigurationProperties) SetDefaultRedirectUrl(v SamlConfigurationPropertyItemsString) {
	o.DefaultRedirectUrl = &v
}

// GetUserIDAttribute returns the UserIDAttribute field value if set, zero value otherwise.
func (o *SamlConfigurationProperties) GetUserIDAttribute() SamlConfigurationPropertyItemsString {
	if o == nil || o.UserIDAttribute == nil {
		var ret SamlConfigurationPropertyItemsString
		return ret
	}
	return *o.UserIDAttribute
}

// GetUserIDAttributeOk returns a tuple with the UserIDAttribute field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SamlConfigurationProperties) GetUserIDAttributeOk() (*SamlConfigurationPropertyItemsString, bool) {
	if o == nil || o.UserIDAttribute == nil {
		return nil, false
	}
	return o.UserIDAttribute, true
}

// HasUserIDAttribute returns a boolean if a field has been set.
func (o *SamlConfigurationProperties) HasUserIDAttribute() bool {
	if o != nil && o.UserIDAttribute != nil {
		return true
	}

	return false
}

// SetUserIDAttribute gets a reference to the given SamlConfigurationPropertyItemsString and assigns it to the UserIDAttribute field.
func (o *SamlConfigurationProperties) SetUserIDAttribute(v SamlConfigurationPropertyItemsString) {
	o.UserIDAttribute = &v
}

// GetUseEncryption returns the UseEncryption field value if set, zero value otherwise.
func (o *SamlConfigurationProperties) GetUseEncryption() SamlConfigurationPropertyItemsBoolean {
	if o == nil || o.UseEncryption == nil {
		var ret SamlConfigurationPropertyItemsBoolean
		return ret
	}
	return *o.UseEncryption
}

// GetUseEncryptionOk returns a tuple with the UseEncryption field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SamlConfigurationProperties) GetUseEncryptionOk() (*SamlConfigurationPropertyItemsBoolean, bool) {
	if o == nil || o.UseEncryption == nil {
		return nil, false
	}
	return o.UseEncryption, true
}

// HasUseEncryption returns a boolean if a field has been set.
func (o *SamlConfigurationProperties) HasUseEncryption() bool {
	if o != nil && o.UseEncryption != nil {
		return true
	}

	return false
}

// SetUseEncryption gets a reference to the given SamlConfigurationPropertyItemsBoolean and assigns it to the UseEncryption field.
func (o *SamlConfigurationProperties) SetUseEncryption(v SamlConfigurationPropertyItemsBoolean) {
	o.UseEncryption = &v
}

// GetCreateUser returns the CreateUser field value if set, zero value otherwise.
func (o *SamlConfigurationProperties) GetCreateUser() SamlConfigurationPropertyItemsBoolean {
	if o == nil || o.CreateUser == nil {
		var ret SamlConfigurationPropertyItemsBoolean
		return ret
	}
	return *o.CreateUser
}

// GetCreateUserOk returns a tuple with the CreateUser field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SamlConfigurationProperties) GetCreateUserOk() (*SamlConfigurationPropertyItemsBoolean, bool) {
	if o == nil || o.CreateUser == nil {
		return nil, false
	}
	return o.CreateUser, true
}

// HasCreateUser returns a boolean if a field has been set.
func (o *SamlConfigurationProperties) HasCreateUser() bool {
	if o != nil && o.CreateUser != nil {
		return true
	}

	return false
}

// SetCreateUser gets a reference to the given SamlConfigurationPropertyItemsBoolean and assigns it to the CreateUser field.
func (o *SamlConfigurationProperties) SetCreateUser(v SamlConfigurationPropertyItemsBoolean) {
	o.CreateUser = &v
}

// GetAddGroupMemberships returns the AddGroupMemberships field value if set, zero value otherwise.
func (o *SamlConfigurationProperties) GetAddGroupMemberships() SamlConfigurationPropertyItemsBoolean {
	if o == nil || o.AddGroupMemberships == nil {
		var ret SamlConfigurationPropertyItemsBoolean
		return ret
	}
	return *o.AddGroupMemberships
}

// GetAddGroupMembershipsOk returns a tuple with the AddGroupMemberships field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SamlConfigurationProperties) GetAddGroupMembershipsOk() (*SamlConfigurationPropertyItemsBoolean, bool) {
	if o == nil || o.AddGroupMemberships == nil {
		return nil, false
	}
	return o.AddGroupMemberships, true
}

// HasAddGroupMemberships returns a boolean if a field has been set.
func (o *SamlConfigurationProperties) HasAddGroupMemberships() bool {
	if o != nil && o.AddGroupMemberships != nil {
		return true
	}

	return false
}

// SetAddGroupMemberships gets a reference to the given SamlConfigurationPropertyItemsBoolean and assigns it to the AddGroupMemberships field.
func (o *SamlConfigurationProperties) SetAddGroupMemberships(v SamlConfigurationPropertyItemsBoolean) {
	o.AddGroupMemberships = &v
}

// GetGroupMembershipAttribute returns the GroupMembershipAttribute field value if set, zero value otherwise.
func (o *SamlConfigurationProperties) GetGroupMembershipAttribute() SamlConfigurationPropertyItemsString {
	if o == nil || o.GroupMembershipAttribute == nil {
		var ret SamlConfigurationPropertyItemsString
		return ret
	}
	return *o.GroupMembershipAttribute
}

// GetGroupMembershipAttributeOk returns a tuple with the GroupMembershipAttribute field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SamlConfigurationProperties) GetGroupMembershipAttributeOk() (*SamlConfigurationPropertyItemsString, bool) {
	if o == nil || o.GroupMembershipAttribute == nil {
		return nil, false
	}
	return o.GroupMembershipAttribute, true
}

// HasGroupMembershipAttribute returns a boolean if a field has been set.
func (o *SamlConfigurationProperties) HasGroupMembershipAttribute() bool {
	if o != nil && o.GroupMembershipAttribute != nil {
		return true
	}

	return false
}

// SetGroupMembershipAttribute gets a reference to the given SamlConfigurationPropertyItemsString and assigns it to the GroupMembershipAttribute field.
func (o *SamlConfigurationProperties) SetGroupMembershipAttribute(v SamlConfigurationPropertyItemsString) {
	o.GroupMembershipAttribute = &v
}

// GetDefaultGroups returns the DefaultGroups field value if set, zero value otherwise.
func (o *SamlConfigurationProperties) GetDefaultGroups() SamlConfigurationPropertyItemsArray {
	if o == nil || o.DefaultGroups == nil {
		var ret SamlConfigurationPropertyItemsArray
		return ret
	}
	return *o.DefaultGroups
}

// GetDefaultGroupsOk returns a tuple with the DefaultGroups field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SamlConfigurationProperties) GetDefaultGroupsOk() (*SamlConfigurationPropertyItemsArray, bool) {
	if o == nil || o.DefaultGroups == nil {
		return nil, false
	}
	return o.DefaultGroups, true
}

// HasDefaultGroups returns a boolean if a field has been set.
func (o *SamlConfigurationProperties) HasDefaultGroups() bool {
	if o != nil && o.DefaultGroups != nil {
		return true
	}

	return false
}

// SetDefaultGroups gets a reference to the given SamlConfigurationPropertyItemsArray and assigns it to the DefaultGroups field.
func (o *SamlConfigurationProperties) SetDefaultGroups(v SamlConfigurationPropertyItemsArray) {
	o.DefaultGroups = &v
}

// GetNameIdFormat returns the NameIdFormat field value if set, zero value otherwise.
func (o *SamlConfigurationProperties) GetNameIdFormat() SamlConfigurationPropertyItemsString {
	if o == nil || o.NameIdFormat == nil {
		var ret SamlConfigurationPropertyItemsString
		return ret
	}
	return *o.NameIdFormat
}

// GetNameIdFormatOk returns a tuple with the NameIdFormat field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SamlConfigurationProperties) GetNameIdFormatOk() (*SamlConfigurationPropertyItemsString, bool) {
	if o == nil || o.NameIdFormat == nil {
		return nil, false
	}
	return o.NameIdFormat, true
}

// HasNameIdFormat returns a boolean if a field has been set.
func (o *SamlConfigurationProperties) HasNameIdFormat() bool {
	if o != nil && o.NameIdFormat != nil {
		return true
	}

	return false
}

// SetNameIdFormat gets a reference to the given SamlConfigurationPropertyItemsString and assigns it to the NameIdFormat field.
func (o *SamlConfigurationProperties) SetNameIdFormat(v SamlConfigurationPropertyItemsString) {
	o.NameIdFormat = &v
}

// GetSynchronizeAttributes returns the SynchronizeAttributes field value if set, zero value otherwise.
func (o *SamlConfigurationProperties) GetSynchronizeAttributes() SamlConfigurationPropertyItemsArray {
	if o == nil || o.SynchronizeAttributes == nil {
		var ret SamlConfigurationPropertyItemsArray
		return ret
	}
	return *o.SynchronizeAttributes
}

// GetSynchronizeAttributesOk returns a tuple with the SynchronizeAttributes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SamlConfigurationProperties) GetSynchronizeAttributesOk() (*SamlConfigurationPropertyItemsArray, bool) {
	if o == nil || o.SynchronizeAttributes == nil {
		return nil, false
	}
	return o.SynchronizeAttributes, true
}

// HasSynchronizeAttributes returns a boolean if a field has been set.
func (o *SamlConfigurationProperties) HasSynchronizeAttributes() bool {
	if o != nil && o.SynchronizeAttributes != nil {
		return true
	}

	return false
}

// SetSynchronizeAttributes gets a reference to the given SamlConfigurationPropertyItemsArray and assigns it to the SynchronizeAttributes field.
func (o *SamlConfigurationProperties) SetSynchronizeAttributes(v SamlConfigurationPropertyItemsArray) {
	o.SynchronizeAttributes = &v
}

// GetHandleLogout returns the HandleLogout field value if set, zero value otherwise.
func (o *SamlConfigurationProperties) GetHandleLogout() SamlConfigurationPropertyItemsBoolean {
	if o == nil || o.HandleLogout == nil {
		var ret SamlConfigurationPropertyItemsBoolean
		return ret
	}
	return *o.HandleLogout
}

// GetHandleLogoutOk returns a tuple with the HandleLogout field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SamlConfigurationProperties) GetHandleLogoutOk() (*SamlConfigurationPropertyItemsBoolean, bool) {
	if o == nil || o.HandleLogout == nil {
		return nil, false
	}
	return o.HandleLogout, true
}

// HasHandleLogout returns a boolean if a field has been set.
func (o *SamlConfigurationProperties) HasHandleLogout() bool {
	if o != nil && o.HandleLogout != nil {
		return true
	}

	return false
}

// SetHandleLogout gets a reference to the given SamlConfigurationPropertyItemsBoolean and assigns it to the HandleLogout field.
func (o *SamlConfigurationProperties) SetHandleLogout(v SamlConfigurationPropertyItemsBoolean) {
	o.HandleLogout = &v
}

// GetLogoutUrl returns the LogoutUrl field value if set, zero value otherwise.
func (o *SamlConfigurationProperties) GetLogoutUrl() SamlConfigurationPropertyItemsString {
	if o == nil || o.LogoutUrl == nil {
		var ret SamlConfigurationPropertyItemsString
		return ret
	}
	return *o.LogoutUrl
}

// GetLogoutUrlOk returns a tuple with the LogoutUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SamlConfigurationProperties) GetLogoutUrlOk() (*SamlConfigurationPropertyItemsString, bool) {
	if o == nil || o.LogoutUrl == nil {
		return nil, false
	}
	return o.LogoutUrl, true
}

// HasLogoutUrl returns a boolean if a field has been set.
func (o *SamlConfigurationProperties) HasLogoutUrl() bool {
	if o != nil && o.LogoutUrl != nil {
		return true
	}

	return false
}

// SetLogoutUrl gets a reference to the given SamlConfigurationPropertyItemsString and assigns it to the LogoutUrl field.
func (o *SamlConfigurationProperties) SetLogoutUrl(v SamlConfigurationPropertyItemsString) {
	o.LogoutUrl = &v
}

// GetClockTolerance returns the ClockTolerance field value if set, zero value otherwise.
func (o *SamlConfigurationProperties) GetClockTolerance() SamlConfigurationPropertyItemsLong {
	if o == nil || o.ClockTolerance == nil {
		var ret SamlConfigurationPropertyItemsLong
		return ret
	}
	return *o.ClockTolerance
}

// GetClockToleranceOk returns a tuple with the ClockTolerance field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SamlConfigurationProperties) GetClockToleranceOk() (*SamlConfigurationPropertyItemsLong, bool) {
	if o == nil || o.ClockTolerance == nil {
		return nil, false
	}
	return o.ClockTolerance, true
}

// HasClockTolerance returns a boolean if a field has been set.
func (o *SamlConfigurationProperties) HasClockTolerance() bool {
	if o != nil && o.ClockTolerance != nil {
		return true
	}

	return false
}

// SetClockTolerance gets a reference to the given SamlConfigurationPropertyItemsLong and assigns it to the ClockTolerance field.
func (o *SamlConfigurationProperties) SetClockTolerance(v SamlConfigurationPropertyItemsLong) {
	o.ClockTolerance = &v
}

// GetDigestMethod returns the DigestMethod field value if set, zero value otherwise.
func (o *SamlConfigurationProperties) GetDigestMethod() SamlConfigurationPropertyItemsString {
	if o == nil || o.DigestMethod == nil {
		var ret SamlConfigurationPropertyItemsString
		return ret
	}
	return *o.DigestMethod
}

// GetDigestMethodOk returns a tuple with the DigestMethod field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SamlConfigurationProperties) GetDigestMethodOk() (*SamlConfigurationPropertyItemsString, bool) {
	if o == nil || o.DigestMethod == nil {
		return nil, false
	}
	return o.DigestMethod, true
}

// HasDigestMethod returns a boolean if a field has been set.
func (o *SamlConfigurationProperties) HasDigestMethod() bool {
	if o != nil && o.DigestMethod != nil {
		return true
	}

	return false
}

// SetDigestMethod gets a reference to the given SamlConfigurationPropertyItemsString and assigns it to the DigestMethod field.
func (o *SamlConfigurationProperties) SetDigestMethod(v SamlConfigurationPropertyItemsString) {
	o.DigestMethod = &v
}

// GetSignatureMethod returns the SignatureMethod field value if set, zero value otherwise.
func (o *SamlConfigurationProperties) GetSignatureMethod() SamlConfigurationPropertyItemsString {
	if o == nil || o.SignatureMethod == nil {
		var ret SamlConfigurationPropertyItemsString
		return ret
	}
	return *o.SignatureMethod
}

// GetSignatureMethodOk returns a tuple with the SignatureMethod field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SamlConfigurationProperties) GetSignatureMethodOk() (*SamlConfigurationPropertyItemsString, bool) {
	if o == nil || o.SignatureMethod == nil {
		return nil, false
	}
	return o.SignatureMethod, true
}

// HasSignatureMethod returns a boolean if a field has been set.
func (o *SamlConfigurationProperties) HasSignatureMethod() bool {
	if o != nil && o.SignatureMethod != nil {
		return true
	}

	return false
}

// SetSignatureMethod gets a reference to the given SamlConfigurationPropertyItemsString and assigns it to the SignatureMethod field.
func (o *SamlConfigurationProperties) SetSignatureMethod(v SamlConfigurationPropertyItemsString) {
	o.SignatureMethod = &v
}

// GetUserIntermediatePath returns the UserIntermediatePath field value if set, zero value otherwise.
func (o *SamlConfigurationProperties) GetUserIntermediatePath() SamlConfigurationPropertyItemsString {
	if o == nil || o.UserIntermediatePath == nil {
		var ret SamlConfigurationPropertyItemsString
		return ret
	}
	return *o.UserIntermediatePath
}

// GetUserIntermediatePathOk returns a tuple with the UserIntermediatePath field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SamlConfigurationProperties) GetUserIntermediatePathOk() (*SamlConfigurationPropertyItemsString, bool) {
	if o == nil || o.UserIntermediatePath == nil {
		return nil, false
	}
	return o.UserIntermediatePath, true
}

// HasUserIntermediatePath returns a boolean if a field has been set.
func (o *SamlConfigurationProperties) HasUserIntermediatePath() bool {
	if o != nil && o.UserIntermediatePath != nil {
		return true
	}

	return false
}

// SetUserIntermediatePath gets a reference to the given SamlConfigurationPropertyItemsString and assigns it to the UserIntermediatePath field.
func (o *SamlConfigurationProperties) SetUserIntermediatePath(v SamlConfigurationPropertyItemsString) {
	o.UserIntermediatePath = &v
}

func (o SamlConfigurationProperties) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Path != nil {
		toSerialize["path"] = o.Path
	}
	if o.ServiceRanking != nil {
		toSerialize["service.ranking"] = o.ServiceRanking
	}
	if o.IdpUrl != nil {
		toSerialize["idpUrl"] = o.IdpUrl
	}
	if o.IdpCertAlias != nil {
		toSerialize["idpCertAlias"] = o.IdpCertAlias
	}
	if o.IdpHttpRedirect != nil {
		toSerialize["idpHttpRedirect"] = o.IdpHttpRedirect
	}
	if o.ServiceProviderEntityId != nil {
		toSerialize["serviceProviderEntityId"] = o.ServiceProviderEntityId
	}
	if o.AssertionConsumerServiceURL != nil {
		toSerialize["assertionConsumerServiceURL"] = o.AssertionConsumerServiceURL
	}
	if o.SpPrivateKeyAlias != nil {
		toSerialize["spPrivateKeyAlias"] = o.SpPrivateKeyAlias
	}
	if o.KeyStorePassword != nil {
		toSerialize["keyStorePassword"] = o.KeyStorePassword
	}
	if o.DefaultRedirectUrl != nil {
		toSerialize["defaultRedirectUrl"] = o.DefaultRedirectUrl
	}
	if o.UserIDAttribute != nil {
		toSerialize["userIDAttribute"] = o.UserIDAttribute
	}
	if o.UseEncryption != nil {
		toSerialize["useEncryption"] = o.UseEncryption
	}
	if o.CreateUser != nil {
		toSerialize["createUser"] = o.CreateUser
	}
	if o.AddGroupMemberships != nil {
		toSerialize["addGroupMemberships"] = o.AddGroupMemberships
	}
	if o.GroupMembershipAttribute != nil {
		toSerialize["groupMembershipAttribute"] = o.GroupMembershipAttribute
	}
	if o.DefaultGroups != nil {
		toSerialize["defaultGroups"] = o.DefaultGroups
	}
	if o.NameIdFormat != nil {
		toSerialize["nameIdFormat"] = o.NameIdFormat
	}
	if o.SynchronizeAttributes != nil {
		toSerialize["synchronizeAttributes"] = o.SynchronizeAttributes
	}
	if o.HandleLogout != nil {
		toSerialize["handleLogout"] = o.HandleLogout
	}
	if o.LogoutUrl != nil {
		toSerialize["logoutUrl"] = o.LogoutUrl
	}
	if o.ClockTolerance != nil {
		toSerialize["clockTolerance"] = o.ClockTolerance
	}
	if o.DigestMethod != nil {
		toSerialize["digestMethod"] = o.DigestMethod
	}
	if o.SignatureMethod != nil {
		toSerialize["signatureMethod"] = o.SignatureMethod
	}
	if o.UserIntermediatePath != nil {
		toSerialize["userIntermediatePath"] = o.UserIntermediatePath
	}
	return json.Marshal(toSerialize)
}

type NullableSamlConfigurationProperties struct {
	value *SamlConfigurationProperties
	isSet bool
}

func (v NullableSamlConfigurationProperties) Get() *SamlConfigurationProperties {
	return v.value
}

func (v *NullableSamlConfigurationProperties) Set(val *SamlConfigurationProperties) {
	v.value = val
	v.isSet = true
}

func (v NullableSamlConfigurationProperties) IsSet() bool {
	return v.isSet
}

func (v *NullableSamlConfigurationProperties) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSamlConfigurationProperties(val *SamlConfigurationProperties) *NullableSamlConfigurationProperties {
	return &NullableSamlConfigurationProperties{value: val, isSet: true}
}

func (v NullableSamlConfigurationProperties) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSamlConfigurationProperties) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


