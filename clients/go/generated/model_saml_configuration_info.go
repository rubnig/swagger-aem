/*
Adobe Experience Manager (AEM) API

Swagger AEM is an OpenAPI specification for Adobe Experience Manager (AEM) API

API version: 3.5.0-pre.0
Contact: opensource@shinesolutions.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// SamlConfigurationInfo struct for SamlConfigurationInfo
type SamlConfigurationInfo struct {
	// Persistent Identity (PID)
	Pid *string `json:"pid,omitempty"`
	// Title
	Title *string `json:"title,omitempty"`
	// Title
	Description *string `json:"description,omitempty"`
	// needed for configuration binding
	BundleLocation *string `json:"bundle_location,omitempty"`
	// needed for configuraiton binding
	ServiceLocation *string `json:"service_location,omitempty"`
	Properties *SamlConfigurationProperties `json:"properties,omitempty"`
}

// NewSamlConfigurationInfo instantiates a new SamlConfigurationInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSamlConfigurationInfo() *SamlConfigurationInfo {
	this := SamlConfigurationInfo{}
	return &this
}

// NewSamlConfigurationInfoWithDefaults instantiates a new SamlConfigurationInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSamlConfigurationInfoWithDefaults() *SamlConfigurationInfo {
	this := SamlConfigurationInfo{}
	return &this
}

// GetPid returns the Pid field value if set, zero value otherwise.
func (o *SamlConfigurationInfo) GetPid() string {
	if o == nil || o.Pid == nil {
		var ret string
		return ret
	}
	return *o.Pid
}

// GetPidOk returns a tuple with the Pid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SamlConfigurationInfo) GetPidOk() (*string, bool) {
	if o == nil || o.Pid == nil {
		return nil, false
	}
	return o.Pid, true
}

// HasPid returns a boolean if a field has been set.
func (o *SamlConfigurationInfo) HasPid() bool {
	if o != nil && o.Pid != nil {
		return true
	}

	return false
}

// SetPid gets a reference to the given string and assigns it to the Pid field.
func (o *SamlConfigurationInfo) SetPid(v string) {
	o.Pid = &v
}

// GetTitle returns the Title field value if set, zero value otherwise.
func (o *SamlConfigurationInfo) GetTitle() string {
	if o == nil || o.Title == nil {
		var ret string
		return ret
	}
	return *o.Title
}

// GetTitleOk returns a tuple with the Title field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SamlConfigurationInfo) GetTitleOk() (*string, bool) {
	if o == nil || o.Title == nil {
		return nil, false
	}
	return o.Title, true
}

// HasTitle returns a boolean if a field has been set.
func (o *SamlConfigurationInfo) HasTitle() bool {
	if o != nil && o.Title != nil {
		return true
	}

	return false
}

// SetTitle gets a reference to the given string and assigns it to the Title field.
func (o *SamlConfigurationInfo) SetTitle(v string) {
	o.Title = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *SamlConfigurationInfo) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SamlConfigurationInfo) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *SamlConfigurationInfo) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *SamlConfigurationInfo) SetDescription(v string) {
	o.Description = &v
}

// GetBundleLocation returns the BundleLocation field value if set, zero value otherwise.
func (o *SamlConfigurationInfo) GetBundleLocation() string {
	if o == nil || o.BundleLocation == nil {
		var ret string
		return ret
	}
	return *o.BundleLocation
}

// GetBundleLocationOk returns a tuple with the BundleLocation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SamlConfigurationInfo) GetBundleLocationOk() (*string, bool) {
	if o == nil || o.BundleLocation == nil {
		return nil, false
	}
	return o.BundleLocation, true
}

// HasBundleLocation returns a boolean if a field has been set.
func (o *SamlConfigurationInfo) HasBundleLocation() bool {
	if o != nil && o.BundleLocation != nil {
		return true
	}

	return false
}

// SetBundleLocation gets a reference to the given string and assigns it to the BundleLocation field.
func (o *SamlConfigurationInfo) SetBundleLocation(v string) {
	o.BundleLocation = &v
}

// GetServiceLocation returns the ServiceLocation field value if set, zero value otherwise.
func (o *SamlConfigurationInfo) GetServiceLocation() string {
	if o == nil || o.ServiceLocation == nil {
		var ret string
		return ret
	}
	return *o.ServiceLocation
}

// GetServiceLocationOk returns a tuple with the ServiceLocation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SamlConfigurationInfo) GetServiceLocationOk() (*string, bool) {
	if o == nil || o.ServiceLocation == nil {
		return nil, false
	}
	return o.ServiceLocation, true
}

// HasServiceLocation returns a boolean if a field has been set.
func (o *SamlConfigurationInfo) HasServiceLocation() bool {
	if o != nil && o.ServiceLocation != nil {
		return true
	}

	return false
}

// SetServiceLocation gets a reference to the given string and assigns it to the ServiceLocation field.
func (o *SamlConfigurationInfo) SetServiceLocation(v string) {
	o.ServiceLocation = &v
}

// GetProperties returns the Properties field value if set, zero value otherwise.
func (o *SamlConfigurationInfo) GetProperties() SamlConfigurationProperties {
	if o == nil || o.Properties == nil {
		var ret SamlConfigurationProperties
		return ret
	}
	return *o.Properties
}

// GetPropertiesOk returns a tuple with the Properties field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SamlConfigurationInfo) GetPropertiesOk() (*SamlConfigurationProperties, bool) {
	if o == nil || o.Properties == nil {
		return nil, false
	}
	return o.Properties, true
}

// HasProperties returns a boolean if a field has been set.
func (o *SamlConfigurationInfo) HasProperties() bool {
	if o != nil && o.Properties != nil {
		return true
	}

	return false
}

// SetProperties gets a reference to the given SamlConfigurationProperties and assigns it to the Properties field.
func (o *SamlConfigurationInfo) SetProperties(v SamlConfigurationProperties) {
	o.Properties = &v
}

func (o SamlConfigurationInfo) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Pid != nil {
		toSerialize["pid"] = o.Pid
	}
	if o.Title != nil {
		toSerialize["title"] = o.Title
	}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	if o.BundleLocation != nil {
		toSerialize["bundle_location"] = o.BundleLocation
	}
	if o.ServiceLocation != nil {
		toSerialize["service_location"] = o.ServiceLocation
	}
	if o.Properties != nil {
		toSerialize["properties"] = o.Properties
	}
	return json.Marshal(toSerialize)
}

type NullableSamlConfigurationInfo struct {
	value *SamlConfigurationInfo
	isSet bool
}

func (v NullableSamlConfigurationInfo) Get() *SamlConfigurationInfo {
	return v.value
}

func (v *NullableSamlConfigurationInfo) Set(val *SamlConfigurationInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableSamlConfigurationInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableSamlConfigurationInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSamlConfigurationInfo(val *SamlConfigurationInfo) *NullableSamlConfigurationInfo {
	return &NullableSamlConfigurationInfo{value: val, isSet: true}
}

func (v NullableSamlConfigurationInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSamlConfigurationInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


