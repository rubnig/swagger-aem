/**
 * Adobe Experience Manager (AEM) API
 * Swagger AEM is an OpenAPI specification for Adobe Experience Manager (AEM) API
 *
 * The version of the OpenAPI document: 3.5.0-pre.0
 * Contact: opensource@shinesolutions.com
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 5.2.1.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * TruststoreInfo.h
 *
 * 
 */

#ifndef ORG_OPENAPITOOLS_CLIENT_MODEL_TruststoreInfo_H_
#define ORG_OPENAPITOOLS_CLIENT_MODEL_TruststoreInfo_H_


#include "../ModelBase.h"

#include "TruststoreItems.h"
#include <vector>

namespace org {
namespace openapitools {
namespace client {
namespace model {


/// <summary>
/// 
/// </summary>
class  TruststoreInfo
    : public ModelBase
{
public:
    TruststoreInfo();
    virtual ~TruststoreInfo();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    bool fromJson(const web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    bool fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// TruststoreInfo members

    /// <summary>
    /// 
    /// </summary>
    std::vector<std::shared_ptr<TruststoreItems>>& getAliases();
    bool aliasesIsSet() const;
    void unsetAliases();

    void setAliases(const std::vector<std::shared_ptr<TruststoreItems>>& value);

    /// <summary>
    /// False if truststore don&#39;t exist
    /// </summary>
    bool isExists() const;
    bool existsIsSet() const;
    void unsetExists();

    void setExists(bool value);


protected:
    std::vector<std::shared_ptr<TruststoreItems>> m_Aliases;
    bool m_AliasesIsSet;
    bool m_Exists;
    bool m_ExistsIsSet;
};


}
}
}
}

#endif /* ORG_OPENAPITOOLS_CLIENT_MODEL_TruststoreInfo_H_ */
